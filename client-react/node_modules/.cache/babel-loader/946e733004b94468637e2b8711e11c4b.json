{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\ThemeChanger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles, Scrollbars } from './themes.js';\nimport axios from 'axios';\n/* bodyBg: \"snow\",\r\nheaders: nearBlack,\r\ntopNavBg: darkGray,\r\ntopNavBgHover: medGray,\r\ntopNavTxt: nearWhite,\r\nlogoBannerBg: \"linear-gradient(to right, #337BD2, #A6C9F3)\",\r\nuserTxt: \"snow\",\r\nactiveCustTxt: \"snow\",\r\ntableHeadBg: lightGray,\r\ntableHeadTxt: nightBase0,\r\ntableDataBg: \"snow\",\r\ntableDataBgOdd: nearWhite,\r\ntableDataTxt: nightBase0, */\n\nconst StyledApp = styled.div``;\n_c = StyledApp;\n\nfunction ThemeChanger(props) {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n\n  const themeToggler = () => {\n    console.log(\"this is bullshit\");\n    axios.get(\"/usersetting/9\").then(response => global.fuckery = response.data.theme).then(setTimeout(() => {\n      console.log(\"global fuckery: \" + global.fuckery);\n      global.fuckery === 'light' ? global.fuckeryToggled = 'dark' : global.fuckeryToggled = 'light';\n      console.log(\"global.fuckeryToggled: \" + global.fuckeryToggled); // UPDATE DB & THEME HERE\n\n      axios.put(\"/usersetting/9\", {\n        theme: global.fuckeryToggled\n      });\n      global.fuckery === 'light' ? global.fuckery = 'dark' : global.fuckery = 'light';\n    }, 200));\n    /*      \r\n       console.log(\"themeToggler ran\");\r\n    \r\n            // GET THE CURRENT THEME\r\n            let url = \"/usersetting/9\";\r\n            axios.get(url).then(response => \r\n                global.Theme = response.data.theme\r\n                // console.log(\"reponse data: \" + response.data.theme)\r\n            );\r\n    \r\n            // TOGGLE THE THEME\r\n            \r\n            // SET THEME TO UPDATED/TOGGLED\r\n            global.ThemeToggled === 'light' ? setTheme('light') : setTheme('dark');\r\n    \r\n            // UPDATE THE TOGGLED THEME IN DB\r\n            console.log(\"global.Theme: \" +  global.Theme)\r\n            setTimeout(() => {\r\n                axios.put(url, {\r\n                    theme: global.Theme\r\n                });\r\n            },10) */\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: global.fuckeryToggled === 'light' ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), theme === 'dark' ? /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 34\n    }\n  }) : null, /*#__PURE__*/React.createElement(StyledApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"universalDark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"darkMode\",\n    type: \"checkbox\",\n    onClick: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }))))));\n}\n\n_s(ThemeChanger, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c2 = ThemeChanger;\nexport default ThemeChanger;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledApp\");\n$RefreshReg$(_c2, \"ThemeChanger\");","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/ThemeChanger.js"],"names":["React","useState","styled","ThemeProvider","lightTheme","darkTheme","GlobalStyles","Scrollbars","axios","StyledApp","div","ThemeChanger","props","theme","setTheme","themeToggler","console","log","get","then","response","global","fuckery","data","setTimeout","fuckeryToggled","put"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme, GlobalStyles, Scrollbars } from './themes.js';\r\nimport axios from 'axios';\r\n/* bodyBg: \"snow\",\r\nheaders: nearBlack,\r\ntopNavBg: darkGray,\r\ntopNavBgHover: medGray,\r\ntopNavTxt: nearWhite,\r\nlogoBannerBg: \"linear-gradient(to right, #337BD2, #A6C9F3)\",\r\nuserTxt: \"snow\",\r\nactiveCustTxt: \"snow\",\r\ntableHeadBg: lightGray,\r\ntableHeadTxt: nightBase0,\r\ntableDataBg: \"snow\",\r\ntableDataBgOdd: nearWhite,\r\ntableDataTxt: nightBase0, */\r\n\r\n\r\nconst StyledApp = styled.div``\r\nfunction ThemeChanger(props) {\r\n    const [theme, setTheme] = useState('light');\r\n    const themeToggler = () => {\r\n        console.log(\"this is bullshit\");\r\n        axios.get(\"/usersetting/9\").then(\r\n            response => (global.fuckery = response.data.theme)\r\n        ).then(\r\n            setTimeout(() => {\r\n                console.log(\"global fuckery: \" + global.fuckery)\r\n                global.fuckery === 'light' ? global.fuckeryToggled = 'dark' : global.fuckeryToggled = 'light';\r\n                console.log(\"global.fuckeryToggled: \" + global.fuckeryToggled);\r\n\r\n                // UPDATE DB & THEME HERE\r\n\r\n                axios.put(\"/usersetting/9\", {\r\n                    theme: global.fuckeryToggled\r\n                });\r\n\r\n                global.fuckery === 'light' ? global.fuckery = 'dark' : global.fuckery = 'light';\r\n            },200)\r\n        );\r\n        \r\n/*      \r\n   console.log(\"themeToggler ran\");\r\n\r\n        // GET THE CURRENT THEME\r\n        let url = \"/usersetting/9\";\r\n        axios.get(url).then(response => \r\n            global.Theme = response.data.theme\r\n            // console.log(\"reponse data: \" + response.data.theme)\r\n        );\r\n\r\n        // TOGGLE THE THEME\r\n        \r\n        // SET THEME TO UPDATED/TOGGLED\r\n        global.ThemeToggled === 'light' ? setTheme('light') : setTheme('dark');\r\n\r\n        // UPDATE THE TOGGLED THEME IN DB\r\n        console.log(\"global.Theme: \" +  global.Theme)\r\n        setTimeout(() => {\r\n            axios.put(url, {\r\n                theme: global.Theme\r\n            });\r\n        },10) */\r\n    }\r\n    return (\r\n        <ThemeProvider theme={global.fuckeryToggled === 'light' ? lightTheme : darkTheme}>\r\n            <GlobalStyles />\r\n            { theme === 'dark' ? <Scrollbars /> : null }\r\n            <StyledApp>\r\n                <div className=\"universalDark\">\r\n                    <div className=\"value\">\r\n                        <label className=\"switch\">\r\n                            <input id=\"darkMode\" type=\"checkbox\" onClick={themeToggler} />\r\n                            <span className=\"slider round\"></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </StyledApp>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger;"]},"metadata":{},"sourceType":"module"}