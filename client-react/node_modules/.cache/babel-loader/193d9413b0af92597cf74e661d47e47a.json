{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\App.js\";\n\n/* React */\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from \"axios\";\n/* Style */\n\nimport \"./App.scss\"; // import \"./App.css\";\n\nimport \"./night.css\";\n/* Heading */\n\nimport Header from \"./components/app/Header\";\nimport Navbar from \"./components/app/Navbar\";\nimport Settings from \"./components/app/Settings\";\n/* Customers */\n\nimport NewCustomer from \"./components/customers/NewCustomer\";\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\nimport EditCustomer from \"./components/customers/EditCustomer\";\n/* Orders */\n\nimport NewOrder from \"./components/orders/NewOrder\";\nimport NewOrder2 from \"./components/orders/NewOrder2\"; // import OrdersGrid from \"./components/orders/OrdersGrid\";\n\nimport EditOrder from \"./components/orders/EditOrder\";\n/* Quotes */\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\n\nimport Quoter from \"./components/quotes/Quoter\";\nimport EditQuote from \"./components/quotes/EditQuote\";\n/* Products */\n\nimport NewProduct from \"./components/products/NewProduct\"; // import ProductsGrid from \"./components/products/ProductsGrid\";\n\nimport EditProduct from \"./components/products/EditProduct\";\n/* Reports */\n\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\nimport Login from \"./components/app/Login\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handler = val => {\n      this.setState({\n        loggedIn: val\n      });\n    };\n\n    this.checkUserLoggedIn = () => {\n      // checks to see if the user is logged in\n      // redirects to login page if NOT logged in\n      // redirects to /customers if IS logged in\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\n        global.loggedInVar = response.data.logged_in;\n        this.setState({\n          username: response.data.user\n        }); // console.log(global.loggedInVar);\n        // console.log(\"state: \" + this.state.loggedIn);\n        // console.log(\"checkUserLoggedIn ran & returned \" + global.loggedInVar);\n        // console.log(global.loggedInVar);\n\n        this.redirect();\n      });\n    };\n\n    this.redirect = () => {\n      // console.log(\"redirect was called\");\n      let location = \"/customers\";\n\n      if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\") {\n        window.location.pathname = location; // console.log(\"redirected to CUSTOMERS\");\n      } else if (global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\") {\n        window.location.pathname = \"/login\"; // this.props.history.push(\"/login\");\n        // console.log(\"redirected to LOGIN\");\n      }\n\n      this.forceUpdate();\n      this.hideSpinner();\n    };\n\n    this.getUserSettings = () => {\n      let url = \"/usersetting/\" + this.state.userID;\n      axios.get(url).then(response => {\n        this.setState({\n          userSettings: response.data\n        });\n      });\n      setTimeout(() => {\n        console.log(this.state.userSettings[0]);\n        console.log(this.state.userSettings[0].settingName);\n      }, 1500);\n    };\n\n    this.resetTimer = () => {\n      clearTimeout(global.time);\n      global.time = setTimeout(() => {\n        // this.checkUserLoggedIn();\n        axios.get(\"/params/\" + this.state.session_id).then(response => {\n          global.loggedInVar2 = response.data.logged_in;\n\n          if (global.loggedInVar2 === \"true\") {\n            this.logOut();\n            console.log(\"reset timer was called as \" + global.loggedInVar2);\n          } else {\n            console.log(\"reset timer was called as \" + global.loggedInVar2);\n          }\n        }); // 12 hours\n      }, 43200000);\n    };\n\n    this.logOut = () => {\n      let url = \"/params/666\";\n      axios.put(url, {\n        //session_id: 666,\n        // user: document.getElementById(\"username\").value,\n        // password: document.getElementById(\"password\").value,\n        logged_in: \"false\"\n      }\n      /*         { params: {\r\n            session_id: this.state.session_id\r\n          }} */\n      ).then(response => {\n        console.log(\"log out was called\");\n        window.location.pathname = \"/login\";\n      });\n    };\n\n    this.hideSpinner = () => {\n      this.authenticate().then(() => {\n        const ele = document.getElementById(\"spinner\");\n        const bg = document.getElementById(\"spinnerBG\");\n\n        if (ele) {\n          // fade out\n          ele.classList.add('available');\n          bg.classList.add('available');\n        }\n      });\n    };\n\n    this.state = {\n      session_id: 666,\n      username: \"\",\n      password: \"\",\n      userID: 9,\n      userSettings: [],\n      loggedIn: \"true\"\n    };\n    this.hideSpinner = this.hideSpinner.bind(this); // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\n  }\n\n  componentDidMount() {\n    // console.log(\"app mounted\");\n    this.checkUserLoggedIn();\n    this.getUserSettings(); // console.log(\"login check performed\");\n    // console.log(this.state.loggedIn);\n\n    document.addEventListener(\"keypress\", this.resetTimer);\n    document.addEventListener(\"mousemove\", this.resetTimer);\n  }\n\n  authenticate() {\n    return new Promise(resolve => setTimeout(resolve, 200)); // 2 seconds\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      session_id: this.state.session_id,\n      user: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/settings\",\n      render: () => /*#__PURE__*/React.createElement(Settings, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 45\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        handler: this.handler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/newcustomer\",\n      render: () => /*#__PURE__*/React.createElement(NewCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/customers\",\n      render: () => /*#__PURE__*/React.createElement(CustomerGrid, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 46\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editcustomer\",\n      render: () => /*#__PURE__*/React.createElement(EditCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 49\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quoter\",\n      render: () => /*#__PURE__*/React.createElement(Quoter, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 43\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editquote\",\n      render: () => /*#__PURE__*/React.createElement(EditQuote, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 46\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/neworder\",\n      component: NewOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/neworder2\",\n      component: NewOrder2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editorder\",\n      component: EditOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/newproduct\",\n      render: () => /*#__PURE__*/React.createElement(NewProduct, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editproduct\",\n      component: EditProduct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/reports/totalsbycustomer\",\n      render: () => /*#__PURE__*/React.createElement(TotalsPerCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 61\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/reports/totalsbydate\",\n      render: () => /*#__PURE__*/React.createElement(TotalsByDate, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 57\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/App.js"],"names":["React","BrowserRouter","Router","Route","axios","Header","Navbar","Settings","NewCustomer","CustomerGrid","EditCustomer","NewOrder","NewOrder2","EditOrder","Quoter","EditQuote","NewProduct","EditProduct","TotalsPerCustomer","TotalsByDate","Login","App","Component","constructor","props","handler","val","setState","loggedIn","checkUserLoggedIn","get","state","session_id","then","response","global","loggedInVar","data","logged_in","username","user","redirect","location","window","pathname","forceUpdate","hideSpinner","getUserSettings","url","userID","userSettings","setTimeout","console","log","settingName","resetTimer","clearTimeout","time","loggedInVar2","logOut","put","authenticate","ele","document","getElementById","bg","classList","add","password","bind","componentDidMount","addEventListener","Promise","resolve","render"],"mappings":"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","sourcesContent":["/* React */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n/* Style */\r\nimport \"./App.scss\";\r\n// import \"./App.css\";\r\nimport \"./night.css\";\r\n\r\n/* Heading */\r\nimport Header from \"./components/app/Header\";\r\nimport Navbar from \"./components/app/Navbar\";\r\nimport Settings from \"./components/app/Settings\";\r\n\r\n/* Customers */\r\nimport NewCustomer from \"./components/customers/NewCustomer\";\r\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\r\nimport EditCustomer from \"./components/customers/EditCustomer\";\r\n\r\n/* Orders */\r\nimport NewOrder from \"./components/orders/NewOrder\";\r\nimport NewOrder2 from \"./components/orders/NewOrder2\";\r\n// import OrdersGrid from \"./components/orders/OrdersGrid\";\r\nimport EditOrder from \"./components/orders/EditOrder\";\r\n\r\n/* Quotes */\r\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\r\nimport Quoter from \"./components/quotes/Quoter\";\r\nimport EditQuote from \"./components/quotes/EditQuote\";\r\n\r\n/* Products */\r\nimport NewProduct from \"./components/products/NewProduct\";\r\n// import ProductsGrid from \"./components/products/ProductsGrid\";\r\nimport EditProduct from \"./components/products/EditProduct\";\r\n\r\n/* Reports */\r\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\r\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\r\nimport Login from \"./components/app/Login\";\r\n\r\nclass App extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      session_id: 666,\r\n      username: \"\",\r\n      password: \"\",\r\n      userID: 9,\r\n      userSettings: [],\r\n      loggedIn: \"true\"\r\n    };\r\n    this.hideSpinner = this.hideSpinner.bind(this);\r\n    // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\r\n  }\r\n  \r\n  handler = (val) => {\r\n    this.setState({\r\n      loggedIn: val\r\n    })\r\n  }\r\n\r\n  checkUserLoggedIn = () => {\r\n    // checks to see if the user is logged in\r\n    // redirects to login page if NOT logged in\r\n    // redirects to /customers if IS logged in\r\n    axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n      global.loggedInVar = response.data.logged_in;\r\n      this.setState({username: response.data.user});\r\n      // console.log(global.loggedInVar);\r\n      // console.log(\"state: \" + this.state.loggedIn);\r\n      // console.log(\"checkUserLoggedIn ran & returned \" + global.loggedInVar);\r\n      // console.log(global.loggedInVar);\r\n      this.redirect();\r\n    });\r\n  }\r\n  \r\n  redirect = () => {    \r\n    // console.log(\"redirect was called\");\r\n    let location = \"/customers\";\r\n    if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\" ) {\r\n      window.location.pathname = location;\r\n      // console.log(\"redirected to CUSTOMERS\");\r\n    } else if ( global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\" ) {\r\n      window.location.pathname = \"/login\";\r\n      // this.props.history.push(\"/login\");\r\n      // console.log(\"redirected to LOGIN\");\r\n    }\r\n    this.forceUpdate();\r\n    this.hideSpinner();\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // console.log(\"app mounted\");\r\n    this.checkUserLoggedIn();\r\n    this.getUserSettings();\r\n    // console.log(\"login check performed\");\r\n    // console.log(this.state.loggedIn);\r\n    document.addEventListener(\"keypress\", this.resetTimer);\r\n    document.addEventListener(\"mousemove\", this.resetTimer);\r\n  }\r\n  \r\n  getUserSettings = () => {\r\n    let url = \"/usersetting/\" + this.state.userID;\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        userSettings: response.data\r\n      })\r\n    });\r\n    setTimeout (() => {\r\n      console.log(this.state.userSettings[0]);\r\n      console.log(this.state.userSettings[0].settingName)\r\n    }, 1500)\r\n  }\r\n\r\n  resetTimer = () => {\r\n    clearTimeout(global.time);\r\n    global.time = setTimeout(() => {\r\n      // this.checkUserLoggedIn();\r\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n        global.loggedInVar2 = response.data.logged_in;\r\n        if(global.loggedInVar2 === \"true\") {\r\n        this.logOut();\r\n        console.log(\"reset timer was called as \" + global.loggedInVar2);\r\n      } else {\r\n        console.log(\"reset timer was called as \" + global.loggedInVar2);\r\n      }\r\n      })\r\n      // 12 hours\r\n    }, 43200000);\r\n  }\r\n\r\n  logOut = () => {\r\n    let url = \"/params/666\";\r\n    axios.put(url, { \r\n      //session_id: 666,\r\n      // user: document.getElementById(\"username\").value,\r\n      // password: document.getElementById(\"password\").value,\r\n      logged_in: \"false\"\r\n  },\r\n/*         { params: {\r\n      session_id: this.state.session_id\r\n    }} */).then(response => {\r\n    console.log(\"log out was called\");\r\n    window.location.pathname = \"/login\";\r\n  })\r\n  }\r\n\r\n  authenticate(){\r\n    return new Promise(resolve => setTimeout(resolve, 200)) // 2 seconds\r\n  }\r\n  \r\n  hideSpinner = () => {\r\n    this.authenticate().then(() => {\r\n      const ele = document.getElementById(\"spinner\");\r\n      const bg = document.getElementById(\"spinnerBG\");\r\n      if(ele){\r\n        // fade out\r\n        ele.classList.add('available');\r\n        bg.classList.add('available')\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Router>\r\n      <Header session_id={this.state.session_id} user={this.state.username} /> \r\n      <Navbar />\r\n      <Route path=\"/settings\" render={() => <Settings checkUser={this.checkUserLoggedIn}/>} />\r\n      {/* Login */}\r\n      <Route exact path=\"/login\" render={() => <Login handler={this.handler} />} />      \r\n      {/* Customers */}\r\n      <Route path=\"/newcustomer\" render={() => <NewCustomer checkUser={this.checkUserLoggedIn} />} />      \r\n      <Route path=\"/customers\" render={() => <CustomerGrid checkUser={this.checkUserLoggedIn} />} />      \r\n      <Route path=\"/editcustomer\" render={() => <EditCustomer checkUser={this.checkUserLoggedIn} />} />          \r\n      {/* Quotes */}\r\n      <Route path=\"/quoter\" render={() => <Quoter checkUser={this.checkUserLoggedIn} />} />      \r\n      <Route path=\"/editquote\" render={() => <EditQuote checkUser={this.checkUserLoggedIn} />} />      \r\n      {/* Orders */}\r\n      <Route path=\"/neworder\" component={NewOrder} />\r\n      <Route path=\"/neworder2\" component={NewOrder2} />\r\n      {/* <Route path=\"/orders\" component={OrdersGrid} /> */}\r\n      <Route path=\"/editorder\" component={EditOrder} />\r\n      {/* Products */}\r\n      <Route path=\"/newproduct\" render={() => <NewProduct checkUser={this.checkUserLoggedIn} />} />\r\n      {/* <Route path=\"/products\" render={() => <ProductsGrid checkUser={this.checkUserLoggedIn} />} /> */}\r\n      <Route path=\"/editproduct\" component={EditProduct} />\r\n      {/* Reports */}\r\n      <Route path=\"/reports/totalsbycustomer\" render={() => <TotalsPerCustomer checkUser={this.checkUserLoggedIn} />} />\r\n      <Route path=\"/reports/totalsbydate\" render={() => <TotalsByDate checkUser={this.checkUserLoggedIn} />} />\r\n\r\n      </Router>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default App;\r\n  "]},"metadata":{},"sourceType":"module"}