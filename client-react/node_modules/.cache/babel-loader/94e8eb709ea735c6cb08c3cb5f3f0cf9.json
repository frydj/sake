{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\App.js\";\n\n/* React */\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from \"axios\";\n/* Style */\n\nimport \"./App.scss\";\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from './themes.js';\n/* Heading */\n\nimport Header from \"./components/app/Header\";\nimport Navbar from \"./components/app/Navbar\";\nimport Settings from \"./components/app/Settings\";\n/* Customers */\n\nimport NewCustomer from \"./components/customers/NewCustomer\";\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\nimport EditCustomer from \"./components/customers/EditCustomer\";\n/* Orders */\n\nimport NewOrder from \"./components/orders/NewOrder\";\nimport NewOrder2 from \"./components/orders/NewOrder2\"; // import OrdersGrid from \"./components/orders/OrdersGrid\";\n\nimport EditOrder from \"./components/orders/EditOrder\";\n/* Quotes */\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\n\nimport Quoter from \"./components/quotes/Quoter\";\nimport EditQuote from \"./components/quotes/EditQuote\";\n/* Products */\n\nimport NewProduct from \"./components/products/NewProduct\"; // import ProductsGrid from \"./components/products/ProductsGrid\";\n\nimport EditProduct from \"./components/products/EditProduct\";\n/* Reports */\n\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\nimport Login from \"./components/app/Login\";\n/* class App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      session_id: 666,\r\n      username: \"\",\r\n      password: \"\",\r\n      userID: 9,\r\n      userSettings: [],\r\n      styles: null,\r\n      loggedIn: \"true\"\r\n    };\r\n    this.hideSpinner = this.hideSpinner.bind(this);\r\n    // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\r\n  }\r\n\r\n  \r\n  handler = (val) => {\r\n    this.setState({\r\n      loggedIn: val\r\n    })\r\n  }\r\n\r\n  checkUserLoggedIn = () => {\r\n    // checks to see if the user is logged in\r\n    // redirects to login page if NOT logged in\r\n    // redirects to /customers if IS logged in\r\n    axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n      global.loggedInVar = response.data.logged_in;\r\n      this.setState({ username: response.data.user });\r\n      // console.log(global.loggedInVar);\r\n      // console.log(\"state: \" + this.state.loggedIn);\r\n      // console.log(\"checkUserLoggedIn ran & returned \" + global.loggedInVar);\r\n      // console.log(global.loggedInVar);\r\n      this.redirect();\r\n    });\r\n  }\r\n\r\n  redirect = () => {\r\n    // console.log(\"redirect was called\");\r\n    let location = \"/customers\";\r\n    if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\") {\r\n      window.location.pathname = location;\r\n      // console.log(\"redirected to CUSTOMERS\");\r\n    } else if (global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\") {\r\n      window.location.pathname = \"/login\";\r\n      // this.props.history.push(\"/login\");\r\n      // console.log(\"redirected to LOGIN\");\r\n    }\r\n    this.forceUpdate();\r\n    this.hideSpinner();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"app mounted\");\r\n    this.checkUserLoggedIn();\r\n    this.getUserSettings();\r\n\r\n    // console.log(\"login check performed\");\r\n    // console.log(this.state.loggedIn);\r\n    document.addEventListener(\"keypress\", this.resetTimer);\r\n    document.addEventListener(\"mousemove\", this.resetTimer);\r\n    \r\n  }\r\n\r\n  getUserSettings = () => {\r\n    let url = \"/usersetting/\" + this.state.userID;\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        userSettings: response.data\r\n      })\r\n    });\r\n    setTimeout(() => {\r\n      // console.log(this.state.userSettings);\r\n      // console.log(this.state.userSettings.darkMode)\r\n    }, 500)\r\n  }\r\n\r\n  resetTimer = () => {\r\n    clearTimeout(global.time);\r\n    global.time = setTimeout(() => {\r\n      // this.checkUserLoggedIn();\r\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n        global.loggedInVar2 = response.data.logged_in;\r\n        if (global.loggedInVar2 === \"true\") {\r\n          this.logOut();\r\n          console.log(\"reset timer was called as \" + global.loggedInVar2);\r\n        } else {\r\n          console.log(\"reset timer was called as \" + global.loggedInVar2);\r\n        }\r\n      })\r\n      // 12 hours\r\n    }, 43200000);\r\n  }\r\n\r\n  logOut = () => {\r\n    let url = \"/params/666\";\r\n    axios.put(url, {\r\n      //session_id: 666,\r\n      // user: document.getElementById(\"username\").value,\r\n      // password: document.getElementById(\"password\").value,\r\n      logged_in: \"false\"\r\n    },\r\n).then(response => {\r\n      console.log(\"log out was called\");\r\n      window.location.pathname = \"/login\";\r\n    })\r\n  }\r\n\r\n  authenticate() {\r\n    return new Promise(resolve => setTimeout(resolve, 200)) // 2 seconds\r\n  }\r\n\r\n  hideSpinner = () => {\r\n    this.authenticate().then(() => {\r\n      const ele = document.getElementById(\"spinner\");\r\n      const bg = document.getElementById(\"spinnerBG\");\r\n      if (ele) {\r\n        // fade out\r\n        ele.classList.add('available');\r\n        bg.classList.add('available')\r\n      }\r\n    })\r\n  }\r\n */\n\n/*  render() { */\n\nconst StyledApp = styled.div``;\n\nfunction App() {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StyledApp, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \" */}\", \" */}\", \" */}\", \" */}\", \" */}\", \" */}\", \" */}\", \" */}\"));\n}\n/* } */\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/App.js"],"names":["React","useState","BrowserRouter","Router","Route","axios","styled","ThemeProvider","lightTheme","darkTheme","GlobalStyles","Header","Navbar","Settings","NewCustomer","CustomerGrid","EditCustomer","NewOrder","NewOrder2","EditOrder","Quoter","EditQuote","NewProduct","EditProduct","TotalsPerCustomer","TotalsByDate","Login","StyledApp","div","App","theme","setTheme","themeToggler"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,aAApD;AAEA;;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA;;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,+BAAtB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAEA;;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA;;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;;AACA,MAAMC,SAAS,GAAGrB,MAAM,CAACsB,GAAI,EAA7B;;AAEE,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,MAAD,CAAlC;;AACA,QAAM+B,YAAY,GAAG,MAAM;AAC3BF,IAAAA,KAAK,KAAK,OAAV,GAAoBC,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;AACC,GAFD;;AAGA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBtB,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFF,CADF;AAkCD;AACH;;;AAEA,eAAeoB,GAAf","sourcesContent":["/* React */\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n/* Style */\r\nimport \"./App.scss\";\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme, GlobalStyles } from './themes.js';\r\n\r\n/* Heading */\r\nimport Header from \"./components/app/Header\";\r\nimport Navbar from \"./components/app/Navbar\";\r\nimport Settings from \"./components/app/Settings\";\r\n\r\n/* Customers */\r\nimport NewCustomer from \"./components/customers/NewCustomer\";\r\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\r\nimport EditCustomer from \"./components/customers/EditCustomer\";\r\n\r\n/* Orders */\r\nimport NewOrder from \"./components/orders/NewOrder\";\r\nimport NewOrder2 from \"./components/orders/NewOrder2\";\r\n// import OrdersGrid from \"./components/orders/OrdersGrid\";\r\nimport EditOrder from \"./components/orders/EditOrder\";\r\n\r\n/* Quotes */\r\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\r\nimport Quoter from \"./components/quotes/Quoter\";\r\nimport EditQuote from \"./components/quotes/EditQuote\";\r\n\r\n/* Products */\r\nimport NewProduct from \"./components/products/NewProduct\";\r\n// import ProductsGrid from \"./components/products/ProductsGrid\";\r\nimport EditProduct from \"./components/products/EditProduct\";\r\n\r\n/* Reports */\r\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\r\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\r\nimport Login from \"./components/app/Login\";\r\n\r\n/* class App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      session_id: 666,\r\n      username: \"\",\r\n      password: \"\",\r\n      userID: 9,\r\n      userSettings: [],\r\n      styles: null,\r\n      loggedIn: \"true\"\r\n    };\r\n    this.hideSpinner = this.hideSpinner.bind(this);\r\n    // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\r\n  }\r\n\r\n  \r\n  handler = (val) => {\r\n    this.setState({\r\n      loggedIn: val\r\n    })\r\n  }\r\n\r\n  checkUserLoggedIn = () => {\r\n    // checks to see if the user is logged in\r\n    // redirects to login page if NOT logged in\r\n    // redirects to /customers if IS logged in\r\n    axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n      global.loggedInVar = response.data.logged_in;\r\n      this.setState({ username: response.data.user });\r\n      // console.log(global.loggedInVar);\r\n      // console.log(\"state: \" + this.state.loggedIn);\r\n      // console.log(\"checkUserLoggedIn ran & returned \" + global.loggedInVar);\r\n      // console.log(global.loggedInVar);\r\n      this.redirect();\r\n    });\r\n  }\r\n\r\n  redirect = () => {\r\n    // console.log(\"redirect was called\");\r\n    let location = \"/customers\";\r\n    if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\") {\r\n      window.location.pathname = location;\r\n      // console.log(\"redirected to CUSTOMERS\");\r\n    } else if (global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\") {\r\n      window.location.pathname = \"/login\";\r\n      // this.props.history.push(\"/login\");\r\n      // console.log(\"redirected to LOGIN\");\r\n    }\r\n    this.forceUpdate();\r\n    this.hideSpinner();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"app mounted\");\r\n    this.checkUserLoggedIn();\r\n    this.getUserSettings();\r\n\r\n    // console.log(\"login check performed\");\r\n    // console.log(this.state.loggedIn);\r\n    document.addEventListener(\"keypress\", this.resetTimer);\r\n    document.addEventListener(\"mousemove\", this.resetTimer);\r\n    \r\n  }\r\n\r\n  getUserSettings = () => {\r\n    let url = \"/usersetting/\" + this.state.userID;\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        userSettings: response.data\r\n      })\r\n    });\r\n    setTimeout(() => {\r\n      // console.log(this.state.userSettings);\r\n      // console.log(this.state.userSettings.darkMode)\r\n    }, 500)\r\n  }\r\n\r\n  resetTimer = () => {\r\n    clearTimeout(global.time);\r\n    global.time = setTimeout(() => {\r\n      // this.checkUserLoggedIn();\r\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n        global.loggedInVar2 = response.data.logged_in;\r\n        if (global.loggedInVar2 === \"true\") {\r\n          this.logOut();\r\n          console.log(\"reset timer was called as \" + global.loggedInVar2);\r\n        } else {\r\n          console.log(\"reset timer was called as \" + global.loggedInVar2);\r\n        }\r\n      })\r\n      // 12 hours\r\n    }, 43200000);\r\n  }\r\n\r\n  logOut = () => {\r\n    let url = \"/params/666\";\r\n    axios.put(url, {\r\n      //session_id: 666,\r\n      // user: document.getElementById(\"username\").value,\r\n      // password: document.getElementById(\"password\").value,\r\n      logged_in: \"false\"\r\n    },\r\n).then(response => {\r\n      console.log(\"log out was called\");\r\n      window.location.pathname = \"/login\";\r\n    })\r\n  }\r\n\r\n  authenticate() {\r\n    return new Promise(resolve => setTimeout(resolve, 200)) // 2 seconds\r\n  }\r\n\r\n  hideSpinner = () => {\r\n    this.authenticate().then(() => {\r\n      const ele = document.getElementById(\"spinner\");\r\n      const bg = document.getElementById(\"spinnerBG\");\r\n      if (ele) {\r\n        // fade out\r\n        ele.classList.add('available');\r\n        bg.classList.add('available')\r\n      }\r\n    })\r\n  }\r\n */\r\n/*  render() { */\r\nconst StyledApp = styled.div``;\r\n\r\n  function App() {\r\n    const [theme, setTheme] = useState(\"dark\");\r\n    const themeToggler = () => {\r\n    theme === 'light' ? setTheme('dark') : setTheme('light');\r\n    }\r\n    return (\r\n      <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n        <StyledApp className=\"App\">\r\n   {/*        <Router> */}\r\n   {/*          <Header session_id={this.state.session_id} user={this.state.username} /> */}\r\n   {/*          <Navbar /> */}\r\n   {/*          <Route path=\"/settings\" render={() => <Settings checkUser={this.checkUserLoggedIn} userSettings={this.state.userSettings} userID={this.state.userID} />} /> */}\r\n   {/*          {/* Login */} */}\r\n   {/*          <Route exact path=\"/login\" render={() => <Login handler={this.handler} />} /> */}\r\n   {/*          {/* Customers */} */}\r\n   {/*          <Route path=\"/newcustomer\" render={() => <NewCustomer checkUser={this.checkUserLoggedIn} />} /> */}\r\n   {/*          <Route path=\"/customers\" render={() => <CustomerGrid checkUser={this.checkUserLoggedIn} />} /> */}\r\n   {/*          <Route path=\"/editcustomer\" render={() => <EditCustomer checkUser={this.checkUserLoggedIn} />} /> */}\r\n   {/*          {/* Quotes */} */}\r\n   {/*          <Route path=\"/quoter\" render={() => <Quoter checkUser={this.checkUserLoggedIn} />} /> */}\r\n   {/*          <Route path=\"/editquote\" render={() => <EditQuote checkUser={this.checkUserLoggedIn} />} /> */}\r\n   {/*          {/* Orders */} */}\r\n   {/*          <Route path=\"/neworder\" component={NewOrder} /> */}\r\n   {/*          <Route path=\"/neworder2\" component={NewOrder2} /> */}\r\n   {/*          {/* <Route path=\"/orders\" component={OrdersGrid} /> */} */}\r\n   {/*          <Route path=\"/editorder\" component={EditOrder} /> */}\r\n   {/*          {/* Products */} */}\r\n   {/*          <Route path=\"/newproduct\" render={() => <NewProduct checkUser={this.checkUserLoggedIn} />} /> */}\r\n   {/*          {/* <Route path=\"/products\" render={() => <ProductsGrid checkUser={this.checkUserLoggedIn} />} /> */} */}\r\n   {/*          <Route path=\"/editproduct\" component={EditProduct} /> */}\r\n   {/*          {/* Reports */} */}\r\n   {/*          <Route path=\"/reports/totalsbycustomer\" render={() => <TotalsPerCustomer checkUser={this.checkUserLoggedIn} />} /> */}\r\n   {/*          <Route path=\"/reports/totalsbydate\" render={() => <TotalsByDate checkUser={this.checkUserLoggedIn} />} /> */}\r\n{/*  */}\r\n   {/*        </Router>} */}\r\n        </StyledApp>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n/* } */\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}