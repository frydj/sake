{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\App.js\";\n\n/* React */\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from \"axios\";\n/* Style */\n\nimport \"./App.scss\";\nimport { darkTheme, Scrollbars } from './themes.js';\nimport \"./light.css\";\n/* Heading */\n\nimport Header from \"./components/app/Header\";\nimport Navbar from \"./components/app/Navbar\";\nimport Settings from \"./components/app/Settings\";\n/* Customers */\n\nimport NewCustomer from \"./components/customers/NewCustomer\";\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\nimport EditCustomer from \"./components/customers/EditCustomer\";\n/* Orders */\n\nimport NewOrder from \"./components/orders/NewOrder\";\nimport NewOrder2 from \"./components/orders/NewOrder2\"; // import OrdersGrid from \"./components/orders/OrdersGrid\";\n\nimport EditOrder from \"./components/orders/EditOrder\";\n/* Quotes */\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\n\nimport Quoter from \"./components/quotes/Quoter\";\nimport EditQuote from \"./components/quotes/EditQuote\";\n/* Products */\n\nimport NewProduct from \"./components/products/NewProduct\"; // import ProductsGrid from \"./components/products/ProductsGrid\";\n\nimport EditProduct from \"./components/products/EditProduct\";\n/* Reports */\n\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\nimport Login from \"./components/app/Login\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setThemeOK = () => {\n      // console.log(this.state.userSettings['theme']);\n      if (this.state.userSettings[\"theme\"] === \"light\") {\n        global.darkEnabled = false;\n      } else {\n        global.darkEnabled = true;\n      } // (\"dark mode global is set to \" + global.darkEnabled);\n      // this.forceUpdate();\n      // console.log(\"did it fucking re-render?\");\n\n    };\n\n    this.handler = val => {\n      this.setState({\n        loggedIn: val\n      });\n    };\n\n    this.checkUserLoggedIn = () => {\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\n        global.loggedInVar = response.data.logged_in;\n        this.setState({\n          username: response.data.user\n        });\n        this.redirect();\n      });\n    };\n\n    this.redirect = () => {\n      let location = \"/customers\";\n\n      if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\") {\n        window.location.pathname = location;\n      } else if (global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\") {\n        window.location.pathname = \"/login\";\n      }\n\n      this.forceUpdate();\n      this.hideSpinner();\n    };\n\n    this.themeToggler = () => {\n      console.log(\"themeToggler ran\");\n      axios.get(\"/usersetting/9\").then(response => global.fuckery = response.data.theme).then(setTimeout(() => {\n        // console.log(\"global fuckery: \" + global.fuckery)\n        global.fuckery === 'light' ? global.fuckeryToggled = 'dark' : global.fuckeryToggled = 'light'; // console.log(\"global.fuckeryToggled: \" + global.fuckeryToggled);\n        // UPDATE DB & THEME HERE\n        // global.fuckeryToggled === \"light\" ? setTheme('light') : setTheme('dark');\n\n        axios.put(\"/usersetting/9\", {\n          theme: global.fuckeryToggled\n        }); // TOGGLE GLOBAL VARIABLE\n\n        global.fuckery === 'light' ? global.fuckery = 'dark' : global.fuckery = 'light';\n        this.setThemeOK();\n      }, 200));\n    };\n\n    this.getUserSettings = () => {\n      let url = \"/usersetting/9\";\n      axios.get(url).then(response => {\n        this.setState({\n          userSettings: response.data\n        });\n      });\n      setTimeout(() => {\n        if (this.state.userSettings[\"theme\"] === 'dark') {\n          this.setState({\n            darkEnabled: true\n          });\n        }\n\n        console.log(\"dark enabled: \" + this.state.darkEnabled);\n      }, 200);\n    };\n\n    this.resetTimer = () => {\n      clearTimeout(global.time);\n      global.time = setTimeout(() => {\n        axios.get(\"/params/\" + this.state.session_id).then(response => {\n          global.loggedInVar2 = response.data.logged_in;\n\n          if (global.loggedInVar2 === \"true\") {\n            this.logOut();\n          }\n        }); // 12 hours\n      }, 43200000);\n    };\n\n    this.logOut = () => {\n      let url = \"/params/666\";\n      axios.put(url, {\n        logged_in: \"false\"\n      }).then(response => {\n        window.location.pathname = \"/login\";\n      });\n    };\n\n    this.hideSpinner = () => {\n      this.authenticate().then(() => {\n        const ele = document.getElementById(\"spinner\");\n        const bg = document.getElementById(\"spinnerBG\");\n\n        if (ele) {\n          // fade out\n          ele.classList.add('available');\n          bg.classList.add('available');\n        }\n      });\n    };\n\n    this.state = {\n      session_id: 666,\n      username: \"\",\n      password: \"\",\n      userID: 9,\n      userSettings: [],\n      styles: null,\n      loggedIn: \"true\",\n      theme: '',\n      darkEnabled: false\n    };\n    this.hideSpinner = this.hideSpinner.bind(this); // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkUserLoggedIn();\n    this.getUserSettings();\n    document.addEventListener(\"keypress\", this.resetTimer);\n    document.addEventListener(\"mousemove\", this.resetTimer);\n    setTimeout(() => {\n      this.setThemeOK();\n    }, 300);\n  }\n\n  authenticate() {\n    return new Promise(resolve => setTimeout(resolve, 200)); // 2 seconds\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: () => this.state.darkEnabled && /*#__PURE__*/React.createElement(Scrollbars, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 67\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      session_id: this.state.session_id,\n      user: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/settings\",\n      render: () => /*#__PURE__*/React.createElement(Settings, {\n        checkUser: this.checkUserLoggedIn,\n        themeToggler: this.themeToggler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 49\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        handler: this.handler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 52\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/newcustomer\",\n      render: () => /*#__PURE__*/React.createElement(NewCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 52\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/customers\",\n      render: () => /*#__PURE__*/React.createElement(CustomerGrid, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editcustomer\",\n      render: () => /*#__PURE__*/React.createElement(EditCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quoter\",\n      render: () => /*#__PURE__*/React.createElement(Quoter, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editquote\",\n      render: () => /*#__PURE__*/React.createElement(EditQuote, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/neworder\",\n      component: NewOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/neworder2\",\n      component: NewOrder2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editorder\",\n      component: EditOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/newproduct\",\n      render: () => /*#__PURE__*/React.createElement(NewProduct, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 51\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editproduct\",\n      component: EditProduct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/reports/totalsbycustomer\",\n      render: () => /*#__PURE__*/React.createElement(TotalsPerCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/reports/totalsbydate\",\n      render: () => /*#__PURE__*/React.createElement(TotalsByDate, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 61\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/App.js"],"names":["React","BrowserRouter","Router","Route","axios","darkTheme","Scrollbars","Header","Navbar","Settings","NewCustomer","CustomerGrid","EditCustomer","NewOrder","NewOrder2","EditOrder","Quoter","EditQuote","NewProduct","EditProduct","TotalsPerCustomer","TotalsByDate","Login","App","Component","constructor","props","setThemeOK","state","userSettings","global","darkEnabled","handler","val","setState","loggedIn","checkUserLoggedIn","get","session_id","then","response","loggedInVar","data","logged_in","username","user","redirect","location","window","pathname","forceUpdate","hideSpinner","themeToggler","console","log","fuckery","theme","setTimeout","fuckeryToggled","put","getUserSettings","url","resetTimer","clearTimeout","time","loggedInVar2","logOut","authenticate","ele","document","getElementById","bg","classList","add","password","userID","styles","bind","componentDidMount","addEventListener","Promise","resolve","render"],"mappings":"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","sourcesContent":["/* React */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n/* Style */\r\nimport \"./App.scss\";\r\nimport { darkTheme, Scrollbars } from './themes.js';\r\nimport \"./light.css\";\r\n\r\n/* Heading */\r\nimport Header from \"./components/app/Header\";\r\nimport Navbar from \"./components/app/Navbar\";\r\nimport Settings from \"./components/app/Settings\";\r\n\r\n/* Customers */\r\nimport NewCustomer from \"./components/customers/NewCustomer\";\r\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\r\nimport EditCustomer from \"./components/customers/EditCustomer\";\r\n\r\n/* Orders */\r\nimport NewOrder from \"./components/orders/NewOrder\";\r\nimport NewOrder2 from \"./components/orders/NewOrder2\";\r\n// import OrdersGrid from \"./components/orders/OrdersGrid\";\r\nimport EditOrder from \"./components/orders/EditOrder\";\r\n\r\n/* Quotes */\r\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\r\nimport Quoter from \"./components/quotes/Quoter\";\r\nimport EditQuote from \"./components/quotes/EditQuote\";\r\n\r\n/* Products */\r\nimport NewProduct from \"./components/products/NewProduct\";\r\n// import ProductsGrid from \"./components/products/ProductsGrid\";\r\nimport EditProduct from \"./components/products/EditProduct\";\r\n\r\n/* Reports */\r\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\r\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\r\nimport Login from \"./components/app/Login\";\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      session_id: 666,\r\n      username: \"\",\r\n      password: \"\",\r\n      userID: 9,\r\n      userSettings: [],\r\n      styles: null,\r\n      loggedIn: \"true\",\r\n      theme: '',\r\n      darkEnabled: false\r\n    };\r\n    this.hideSpinner = this.hideSpinner.bind(this);\r\n    // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkUserLoggedIn();\r\n    this.getUserSettings();\r\n    document.addEventListener(\"keypress\", this.resetTimer);\r\n    document.addEventListener(\"mousemove\", this.resetTimer);\r\n    setTimeout(() => {\r\n      this.setThemeOK();\r\n    },300)\r\n  }\r\n\r\n  setThemeOK = () => {\r\n    // console.log(this.state.userSettings['theme']);\r\n    if(this.state.userSettings[\"theme\"] === \"light\") {\r\n      global.darkEnabled = false;\r\n    } else {\r\n      global.darkEnabled = true;\r\n    }\r\n    // (\"dark mode global is set to \" + global.darkEnabled);\r\n    // this.forceUpdate();\r\n    // console.log(\"did it fucking re-render?\");\r\n  }\r\n\r\n  handler = (val) => {\r\n    this.setState({\r\n      loggedIn: val\r\n    })\r\n  }\r\n\r\n  checkUserLoggedIn = () => {\r\n    axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n      global.loggedInVar = response.data.logged_in;\r\n      this.setState({ username: response.data.user });\r\n      this.redirect();\r\n    });\r\n  }\r\n\r\n  redirect = () => {\r\n    let location = \"/customers\";\r\n    if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\") {\r\n      window.location.pathname = location;\r\n    } else if (global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\") {\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    this.forceUpdate();\r\n    this.hideSpinner();\r\n  }\r\n\r\n  themeToggler = () => {\r\n    console.log(\"themeToggler ran\");\r\n    axios.get(\"/usersetting/9\").then(\r\n      response => (global.fuckery = response.data.theme)\r\n    ).then(\r\n      setTimeout(() => {\r\n        // console.log(\"global fuckery: \" + global.fuckery)\r\n        global.fuckery === 'light' ? global.fuckeryToggled = 'dark' : global.fuckeryToggled = 'light';\r\n        // console.log(\"global.fuckeryToggled: \" + global.fuckeryToggled);\r\n\r\n        // UPDATE DB & THEME HERE\r\n\r\n        // global.fuckeryToggled === \"light\" ? setTheme('light') : setTheme('dark');\r\n        axios.put(\"/usersetting/9\", {\r\n          theme: global.fuckeryToggled\r\n        });\r\n\r\n        // TOGGLE GLOBAL VARIABLE\r\n        global.fuckery === 'light' ? global.fuckery = 'dark' : global.fuckery = 'light';\r\n        this.setThemeOK();\r\n      }, 200)\r\n    );\r\n    \r\n  }\r\n\r\n  getUserSettings = () => {\r\n    let url = \"/usersetting/9\";\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        userSettings: response.data\r\n      })\r\n    });\r\n    setTimeout(() => {\r\n      if (this.state.userSettings[\"theme\"] === 'dark') {\r\n        this.setState({\r\n          darkEnabled: true\r\n        })\r\n      }\r\n      console.log(\"dark enabled: \" + this.state.darkEnabled);\r\n    },200)\r\n  }\r\n\r\n  resetTimer = () => {\r\n    clearTimeout(global.time);\r\n    global.time = setTimeout(() => {\r\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n        global.loggedInVar2 = response.data.logged_in;\r\n        if (global.loggedInVar2 === \"true\") {\r\n          this.logOut();\r\n        }\r\n      })\r\n      // 12 hours\r\n    }, 43200000);\r\n  }\r\n\r\n  logOut = () => {\r\n    let url = \"/params/666\";\r\n    axios.put(url, {\r\n      logged_in: \"false\"\r\n    },).then(response => {\r\n      window.location.pathname = \"/login\";\r\n    })\r\n  }\r\n\r\n  authenticate() {\r\n    return new Promise(resolve => setTimeout(resolve, 200)) // 2 seconds\r\n  }\r\n\r\n  hideSpinner = () => {\r\n    this.authenticate().then(() => {\r\n      const ele = document.getElementById(\"spinner\");\r\n      const bg = document.getElementById(\"spinnerBG\");\r\n      if (ele) {\r\n        // fade out\r\n        ele.classList.add('available');\r\n        bg.classList.add('available')\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* {this.state.userSettings['theme'] === 'dark' ? <Scrollbars theme={darkTheme} /> : null} */}\r\n        {/* { true  && <Scrollbars />} */}\r\n        <Router>\r\n          <Route path=\"/\" render={() => this.state.darkEnabled && <Scrollbars />} />\r\n          <Header session_id={this.state.session_id} user={this.state.username} />\r\n          <Navbar />\r\n          <Route path=\"/settings\" render={() => <Settings checkUser={this.checkUserLoggedIn} themeToggler={this.themeToggler} />} />\r\n          {/* Login */}\r\n          <Route exact path=\"/login\" render={() => <Login handler={this.handler} />} />\r\n          {/* Customers */}\r\n          <Route path=\"/newcustomer\" render={() => <NewCustomer checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/customers\" render={() => <CustomerGrid checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/editcustomer\" render={() => <EditCustomer checkUser={this.checkUserLoggedIn} />} />\r\n          {/* Quotes */}\r\n          <Route path=\"/quoter\" render={() => <Quoter checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/editquote\" render={() => <EditQuote checkUser={this.checkUserLoggedIn} />} />\r\n          {/* Orders */}\r\n          <Route path=\"/neworder\" component={NewOrder} />\r\n          <Route path=\"/neworder2\" component={NewOrder2} />\r\n          {/* <Route path=\"/orders\" component={OrdersGrid} /> */}\r\n          <Route path=\"/editorder\" component={EditOrder} />\r\n          {/* Products */}\r\n          <Route path=\"/newproduct\" render={() => <NewProduct checkUser={this.checkUserLoggedIn} />} />\r\n          {/* <Route path=\"/products\" render={() => <ProductsGrid checkUser={this.checkUserLoggedIn} />} /> */}\r\n          <Route path=\"/editproduct\" component={EditProduct} />\r\n          {/* Reports */}\r\n          <Route path=\"/reports/totalsbycustomer\" render={() => <TotalsPerCustomer checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/reports/totalsbydate\" render={() => <TotalsByDate checkUser={this.checkUserLoggedIn} />} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}