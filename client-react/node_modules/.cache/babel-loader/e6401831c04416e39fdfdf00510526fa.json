{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from './themes.js';\nimport Appy from \"./Appy\";\nconst StyledApp = styled.div`\n\n    color: ${props => props.theme.fontColor};\n\n    .logoStrip {\n        background: ${props => props.theme.logoStrip};\n    }\n    body, body *, \n    .orders th, .orders td, \n    h3, h4, \n    .grid table tr td, \n    .customer th, \n    .field input, .field select, \n    .field label, \n    .grid table tr:nth-child(2) th i, \n    .grid table tr:nth-child(2) th input, \n    .customerSearchResultActive, \n    .topnav button, \n    .numberPerPageContainer, \n    #paginateBackArrow, \n    #newOrderContainer h3, \n    .logoBanner, \n    .quoterContainer h4, \n    .quoterTable table td, \n    .quoterTable input, \n    .addRow, \n    .tdTotals, \n    ::-webkit-scrollbar-button, \n    ::-webkit-scrollbar-track, \n    ::-webkit-scrollbar-track-piece, \n    ::-webkit-scrollbar-corner, \n    ::-webkit-resizer, \n    input:checked+.slider:after {\n        color: ${props => props.theme.mainTextColor};\n    }\n    .customer td, \n    #paginateBackArrow:hover, #paginateForwardArrow:hover, \n    .paginateActive, \n    .logoBanner, \n    .quoterContainer h4, \n    .quoterTable table td, \n    .addRow, \n    ::-webkit-scrollbar-button:single-button:vertical:decrement {\n        background-color: ${props => props.theme.mainBackgroundColor};\n    }\n    .currencyField, \n    #emptyCart, \n    .productListedInfoRightSection, \n    .productListedQuantityIncrement, \n    .productListedQuantity, \n    .productListedPrice, \n    .productListedlineItemTotal::before, \n    .modalHeader .modalHeaderText {\n        color: ${props => props.theme.secondaryTextColor};\n    }\n    .cancel, \n    .saveOrder, \n    .newSave, \n    .back svg, \n    .addProductButton, \n    .logoLogin, \n    .loginButton:active, \n    .activeCustomer:hover {\n        color: ${props => props.theme.tertiaryTextColor};\n    }\n    body, \n    .field input, .field select, \n    .grid table tr:nth-child(2) th, \n    .searchResults, \n    .customerSearchResult:hover, .customerSearchResult:active, \n    .quoterTable input {\n        background-color: ${props => props.theme.secondaryBackgroundColor};\n    }\n    .grid, \n    .productListedImage img, \n    #notes, \n    .productSearchResultsTile, \n    .returnedProduct.row:first-child, \n    .modalBody .quantityContainer, \n    .monthlyInner {\n    \tborder: 1px solid ${props => props.theme.mainBorder};\n    }\n    #table tbody tr td,\n    #table tbody tr th {\n        outline: 1px solid ${props => props.theme.mainBorder};\n    }\n    .App-header, \n    .grid, \n    .backgroundAnimated, \n    .topnav a, \n    ::-webkit-scrollbar-button:single-button,\n    .topnav {\n    \tbackground-color: ${props => props.theme.background4};\n    }\n    .gridToolbox [data-tooltipped], \n    .addRow:hover, \n    #grid-refresh:hover, \n    #grid-new:hover, \n    .slider:before {\n\t    background-color: ${props => props.theme.background5};\n    }\n    .navLink:hover, \n    .navLink2:hover, \n    .modalBody, \n    .productSearchSearch, \n    .returnedProduct.row {\n    \tborder-bottom: 1px solid ${props => props.theme.mainBorder};\n    }\n    .navLink:hover, \n    .navLink2:hover, \n    .productSearchSearch ::-webkit-input-placeholder, \n    .dropdown-content a, \n    .dropdown-content a:hover,\n    .topnav a:hover, .dropdown:hover .dropbtn, {\n        color: ${props => props.theme.mainTextColor};\n        background-color: ${props => props.theme.navHover}\n    }\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"universalDark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"darkMode\",\n    type: \"checkbox\",\n    onClick: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Appy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/App.js"],"names":["React","useState","styled","ThemeProvider","lightTheme","darkTheme","GlobalStyles","Appy","StyledApp","div","props","theme","fontColor","logoStrip","mainTextColor","mainBackgroundColor","secondaryTextColor","tertiaryTextColor","secondaryBackgroundColor","mainBorder","background4","background5","navHover","App","setTheme","themeToggler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,aAApD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;;aAEhBC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAAU;;;sBAGtBF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,SAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBA4BpCH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,aAAc;;;;;;;;;;4BAUxBJ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,mBAAoB;;;;;;;;;;iBAUpDL,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYK,kBAAmB;;;;;;;;;;iBAUxCN,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYM,iBAAkB;;;;;;;;4BAQ5BP,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYO,wBAAyB;;;;;;;;;yBASjDR,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYQ,UAAW;;;;6BAI5BT,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYQ,UAAW;;;;;;;;yBAQpCT,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYS,WAAY;;;;;;;yBAOjCV,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYU,WAAY;;;;;;;gCAO1BX,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYQ,UAAW;;;;;;;;iBAQ/CT,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,aAAc;4BACxBJ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYW,QAAS;;CAnH1D;;AAsHA,SAASC,GAAT,GAAe;AACX,QAAM,CAACZ,KAAD,EAAQa,QAAR,IAAoBvB,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMwB,YAAY,GAAG,MAAM;AACvBd,IAAAA,KAAK,KAAK,OAAV,GAAoBa,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;AACH,GAFD;;AAGA,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,KAAK,KAAK,OAAV,GAAoBP,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,OAAO,EAAEoB,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ,eASI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFJ,CADJ;AAgBH;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme, GlobalStyles } from './themes.js';\r\nimport Appy from \"./Appy\";\r\n\r\nconst StyledApp = styled.div`\r\n\r\n    color: ${props => props.theme.fontColor};\r\n\r\n    .logoStrip {\r\n        background: ${props => props.theme.logoStrip};\r\n    }\r\n    body, body *, \r\n    .orders th, .orders td, \r\n    h3, h4, \r\n    .grid table tr td, \r\n    .customer th, \r\n    .field input, .field select, \r\n    .field label, \r\n    .grid table tr:nth-child(2) th i, \r\n    .grid table tr:nth-child(2) th input, \r\n    .customerSearchResultActive, \r\n    .topnav button, \r\n    .numberPerPageContainer, \r\n    #paginateBackArrow, \r\n    #newOrderContainer h3, \r\n    .logoBanner, \r\n    .quoterContainer h4, \r\n    .quoterTable table td, \r\n    .quoterTable input, \r\n    .addRow, \r\n    .tdTotals, \r\n    ::-webkit-scrollbar-button, \r\n    ::-webkit-scrollbar-track, \r\n    ::-webkit-scrollbar-track-piece, \r\n    ::-webkit-scrollbar-corner, \r\n    ::-webkit-resizer, \r\n    input:checked+.slider:after {\r\n        color: ${props => props.theme.mainTextColor};\r\n    }\r\n    .customer td, \r\n    #paginateBackArrow:hover, #paginateForwardArrow:hover, \r\n    .paginateActive, \r\n    .logoBanner, \r\n    .quoterContainer h4, \r\n    .quoterTable table td, \r\n    .addRow, \r\n    ::-webkit-scrollbar-button:single-button:vertical:decrement {\r\n        background-color: ${props => props.theme.mainBackgroundColor};\r\n    }\r\n    .currencyField, \r\n    #emptyCart, \r\n    .productListedInfoRightSection, \r\n    .productListedQuantityIncrement, \r\n    .productListedQuantity, \r\n    .productListedPrice, \r\n    .productListedlineItemTotal::before, \r\n    .modalHeader .modalHeaderText {\r\n        color: ${props => props.theme.secondaryTextColor};\r\n    }\r\n    .cancel, \r\n    .saveOrder, \r\n    .newSave, \r\n    .back svg, \r\n    .addProductButton, \r\n    .logoLogin, \r\n    .loginButton:active, \r\n    .activeCustomer:hover {\r\n        color: ${props => props.theme.tertiaryTextColor};\r\n    }\r\n    body, \r\n    .field input, .field select, \r\n    .grid table tr:nth-child(2) th, \r\n    .searchResults, \r\n    .customerSearchResult:hover, .customerSearchResult:active, \r\n    .quoterTable input {\r\n        background-color: ${props => props.theme.secondaryBackgroundColor};\r\n    }\r\n    .grid, \r\n    .productListedImage img, \r\n    #notes, \r\n    .productSearchResultsTile, \r\n    .returnedProduct.row:first-child, \r\n    .modalBody .quantityContainer, \r\n    .monthlyInner {\r\n    \tborder: 1px solid ${props => props.theme.mainBorder};\r\n    }\r\n    #table tbody tr td,\r\n    #table tbody tr th {\r\n        outline: 1px solid ${props => props.theme.mainBorder};\r\n    }\r\n    .App-header, \r\n    .grid, \r\n    .backgroundAnimated, \r\n    .topnav a, \r\n    ::-webkit-scrollbar-button:single-button,\r\n    .topnav {\r\n    \tbackground-color: ${props => props.theme.background4};\r\n    }\r\n    .gridToolbox [data-tooltipped], \r\n    .addRow:hover, \r\n    #grid-refresh:hover, \r\n    #grid-new:hover, \r\n    .slider:before {\r\n\t    background-color: ${props => props.theme.background5};\r\n    }\r\n    .navLink:hover, \r\n    .navLink2:hover, \r\n    .modalBody, \r\n    .productSearchSearch, \r\n    .returnedProduct.row {\r\n    \tborder-bottom: 1px solid ${props => props.theme.mainBorder};\r\n    }\r\n    .navLink:hover, \r\n    .navLink2:hover, \r\n    .productSearchSearch ::-webkit-input-placeholder, \r\n    .dropdown-content a, \r\n    .dropdown-content a:hover,\r\n    .topnav a:hover, .dropdown:hover .dropbtn, {\r\n        color: ${props => props.theme.mainTextColor};\r\n        background-color: ${props => props.theme.navHover}\r\n    }\r\n`\r\nfunction App() {\r\n    const [theme, setTheme] = useState(\"light\");\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setTheme('dark') : setTheme('light');\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n            <GlobalStyles />\r\n            <StyledApp>\r\n                <div className=\"universalDark\">\r\n                    <div className=\"value\">\r\n                        <label className=\"switch\">\r\n                            <input id=\"darkMode\" type=\"checkbox\" onClick={themeToggler} />\r\n                            <span className=\"slider round\"></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <Appy />\r\n            </StyledApp>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}