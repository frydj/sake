{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from './themes.js';\nimport Appy from \"./Appy\";\nconst StyledApp = styled.div`\n\n    color: ${props => props.theme.fontColor};\n\n    &.logoStrip {\n        text-align: left;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        height: 58px;\n        font-size: 2em;\n        background: linear-gradient(to right, var(--night-blue), var(--night-blue2));\n        border-bottom: 2px solid #616161;\n        -webkit-touch-callout: none;\n        /* iOS Safari */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Old versions of Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n        user-select: none;\n        /* Non-prefixed version, currently\n        supported by Chrome, Opera and Firefox */\n    }\n\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"universalDark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"darkMode\",\n    type: \"checkbox\",\n    onClick: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Appy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/App.js"],"names":["React","useState","styled","ThemeProvider","lightTheme","darkTheme","GlobalStyles","Appy","StyledApp","div","props","theme","fontColor","App","setTheme","themeToggler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,aAApD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;;aAEhBC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;CAF5C;;AA8BA,SAASC,GAAT,GAAe;AACX,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBb,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMc,YAAY,GAAG,MAAM;AACvBJ,IAAAA,KAAK,KAAK,OAAV,GAAoBG,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;AACH,GAFD;;AAGA,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,KAAK,KAAK,OAAV,GAAoBP,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,OAAO,EAAEU,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ,eASI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFJ,CADJ;AAgBH;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme, GlobalStyles } from './themes.js';\r\nimport Appy from \"./Appy\";\r\n\r\nconst StyledApp = styled.div`\r\n\r\n    color: ${props => props.theme.fontColor};\r\n\r\n    &.logoStrip {\r\n        text-align: left;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        height: 58px;\r\n        font-size: 2em;\r\n        background: linear-gradient(to right, var(--night-blue), var(--night-blue2));\r\n        border-bottom: 2px solid #616161;\r\n        -webkit-touch-callout: none;\r\n        /* iOS Safari */\r\n        -webkit-user-select: none;\r\n        /* Safari */\r\n        -khtml-user-select: none;\r\n        /* Konqueror HTML */\r\n        -moz-user-select: none;\r\n        /* Old versions of Firefox */\r\n        -ms-user-select: none;\r\n        /* Internet Explorer/Edge */\r\n        user-select: none;\r\n        /* Non-prefixed version, currently\r\n        supported by Chrome, Opera and Firefox */\r\n    }\r\n\r\n`\r\nfunction App() {\r\n    const [theme, setTheme] = useState(\"light\");\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setTheme('dark') : setTheme('light');\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n            <GlobalStyles />\r\n            <StyledApp>\r\n                <div className=\"universalDark\">\r\n                    <div className=\"value\">\r\n                        <label className=\"switch\">\r\n                            <input id=\"darkMode\" type=\"checkbox\" onClick={themeToggler} />\r\n                            <span className=\"slider round\"></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <Appy />\r\n            </StyledApp>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}