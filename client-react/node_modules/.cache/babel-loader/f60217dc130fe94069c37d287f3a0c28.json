{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\App.js\";\n\n/* React */\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from \"axios\";\n/* Style */\n\nimport \"./App.scss\";\nimport \"./light.css\";\nimport { DarkTheme } from './components/app/tools/DarkTheme.js';\n/* Heading */\n\nimport Header from \"./components/app/Header\";\nimport Navbar from \"./components/app/Navbar\";\nimport Settings from \"./components/app/Settings\";\n/* Customers */\n\nimport NewCustomer from \"./components/customers/NewCustomer\";\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\nimport EditCustomer from \"./components/customers/EditCustomer\";\n/* Orders */\n\nimport NewOrder from \"./components/orders/NewOrder\";\nimport NewOrder2 from \"./components/orders/NewOrder2\"; // import OrdersGrid from \"./components/orders/OrdersGrid\";\n\nimport EditOrder from \"./components/orders/EditOrder\";\n/* Quotes */\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\n\nimport Quoter from \"./components/quotes/Quoter\";\nimport EditQuote from \"./components/quotes/EditQuote\";\n/* Products */\n\nimport NewProduct from \"./components/products/NewProduct\"; // import ProductsGrid from \"./components/products/ProductsGrid\";\n\nimport EditProduct from \"./components/products/EditProduct\";\n/* Reports */\n\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\nimport Login from \"./components/app/Login\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setThemeOK = () => {\n      if (this.state.userSettings[\"theme\"] === \"light\") {\n        global.darkEnabled = false;\n      } else {\n        global.darkEnabled = true;\n      }\n    };\n\n    this.handler = val => {\n      this.setState({\n        loggedIn: val\n      });\n    };\n\n    this.checkUserLoggedIn = () => {\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\n        global.loggedInVar = response.data.logged_in;\n        this.setState({\n          username: response.data.user\n        }, function () {\n          this.redirect();\n        });\n      });\n    };\n\n    this.redirect = () => {\n      let location = \"/customers\";\n\n      if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\") {\n        window.location.pathname = location;\n      } else if (global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\") {\n        window.location.pathname = \"/login\";\n      }\n\n      this.forceUpdate();\n      this.hideSpinner();\n    };\n\n    this.themeToggler = () => {\n      axios.get(\"/usersetting/9\").then(response => global.theme = response.data.theme).then(setTimeout(() => {\n        global.theme === 'light' ? global.themeToggled = 'dark' : global.themeToggled = 'light'; // UPDATE DB & THEME HERE\n\n        axios.put(\"/usersetting/9\", {\n          theme: global.themeToggled\n        });\n        setTimeout(() => {\n          if (this.state.userSettings[\"theme\"] === 'dark') {\n            this.setState({\n              darkEnabled: true\n            }, function () {\n              // this.setThemeOK();\n              this.getUserSettings();\n            });\n          } else {\n            this.setState({\n              darkEnabled: false\n            }, function () {\n              // this.setThemeOK();\n              this.getUserSettings();\n            });\n          }\n        }, 200); // TOGGLE GLOBAL VARIABLE\n\n        global.theme === 'light' ? global.theme = 'dark' : global.theme = 'light';\n      }, 200));\n    };\n\n    this.getUserSettings = () => {\n      let url = \"/usersetting/9\";\n      axios.get(url).then(response => {\n        this.setState({\n          userSettings: response.data,\n          darkEnabled: response.data[\"theme\"] === 'dark' ? true : false\n        }\n        /*,function() {\r\n         setTimeout(() => {\r\n           if (this.state.userSettings[\"theme\"] === 'dark') {\r\n             this.setState({\r\n               darkEnabled: true\r\n             })\r\n           } else {\r\n             this.setState({\r\n               darkEnabled: false\r\n             })\r\n           }\r\n         },10)\r\n        }*/\n        , function () {});\n      });\n    };\n\n    this.resetTimer = () => {\n      clearTimeout(global.time);\n      global.time = setTimeout(() => {\n        axios.get(\"/params/\" + this.state.session_id).then(response => {\n          global.loggedInVar2 = response.data.logged_in;\n\n          if (global.loggedInVar2 === \"true\") {\n            this.logOut();\n          }\n        }); // 12 hours\n      }, 43200000);\n    };\n\n    this.logOut = () => {\n      let url = \"/params/666\";\n      axios.put(url, {\n        logged_in: \"false\"\n      }).then(response => {\n        window.location.pathname = \"/login\";\n      });\n    };\n\n    this.hideSpinner = () => {\n      this.authenticate().then(() => {\n        const ele = document.getElementById(\"spinner\");\n        const bg = document.getElementById(\"spinnerBG\");\n\n        if (ele) {\n          // fade out\n          ele.classList.add('available');\n          bg.classList.add('available');\n        }\n      });\n    };\n\n    this.state = {\n      session_id: 666,\n      username: \"\",\n      password: \"\",\n      userID: 9,\n      userSettings: [],\n      styles: null,\n      loggedIn: \"true\",\n      theme: '',\n      darkEnabled: false,\n      agent: {\n        name: \"Derek Fry\",\n        phone: \"(336) 406-3385\",\n        email: \"derek.fry2@cellularsales.com\"\n      }\n    };\n    this.hideSpinner = this.hideSpinner.bind(this); // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkUserLoggedIn();\n    this.getUserSettings();\n    document.addEventListener(\"keypress\", this.resetTimer);\n    document.addEventListener(\"mousemove\", this.resetTimer);\n    /*     setTimeout(() => {\r\n          this.setThemeOK();\r\n        },200) */\n  }\n\n  authenticate() {\n    return new Promise(resolve => setTimeout(resolve, 200)); // 2 seconds\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }, this.state.userSettings['theme'] === 'dark' ? /*#__PURE__*/React.createElement(DarkTheme, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 56\n      }\n    }) : null, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      session_id: this.state.session_id,\n      user: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/settings\",\n      render: () => /*#__PURE__*/React.createElement(Settings, {\n        checkUser: this.checkUserLoggedIn,\n        themeToggler: this.themeToggler,\n        getUserSettings: this.getUserSettings,\n        darkEnabled: this.state.darkEnabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 49\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        handler: this.handler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 52\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/newcustomer\",\n      render: () => /*#__PURE__*/React.createElement(NewCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 52\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/customers\",\n      render: () => /*#__PURE__*/React.createElement(CustomerGrid, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editcustomer\",\n      render: () => /*#__PURE__*/React.createElement(EditCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/quoter\",\n      render: () => /*#__PURE__*/React.createElement(Quoter, {\n        agent: this.state.agent,\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editquote\",\n      render: () => /*#__PURE__*/React.createElement(EditQuote, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/neworder\",\n      component: NewOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/neworder2\",\n      component: NewOrder2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editorder\",\n      component: EditOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/newproduct\",\n      render: () => /*#__PURE__*/React.createElement(NewProduct, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 51\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editproduct\",\n      component: EditProduct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/reports/totalsbycustomer\",\n      render: () => /*#__PURE__*/React.createElement(TotalsPerCustomer, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/reports/totalsbydate\",\n      render: () => /*#__PURE__*/React.createElement(TotalsByDate, {\n        checkUser: this.checkUserLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 61\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/App.js"],"names":["React","BrowserRouter","Router","Route","axios","DarkTheme","Header","Navbar","Settings","NewCustomer","CustomerGrid","EditCustomer","NewOrder","NewOrder2","EditOrder","Quoter","EditQuote","NewProduct","EditProduct","TotalsPerCustomer","TotalsByDate","Login","App","Component","constructor","props","setThemeOK","state","userSettings","global","darkEnabled","handler","val","setState","loggedIn","checkUserLoggedIn","get","session_id","then","response","loggedInVar","data","logged_in","username","user","redirect","location","window","pathname","forceUpdate","hideSpinner","themeToggler","theme","setTimeout","themeToggled","put","getUserSettings","url","resetTimer","clearTimeout","time","loggedInVar2","logOut","authenticate","ele","document","getElementById","bg","classList","add","password","userID","styles","agent","name","phone","email","bind","componentDidMount","addEventListener","Promise","resolve","render"],"mappings":"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","sourcesContent":["/* React */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n/* Style */\r\nimport \"./App.scss\";\r\nimport \"./light.css\";\r\nimport { DarkTheme } from './components/app/tools/DarkTheme.js';\r\n\r\n/* Heading */\r\nimport Header from \"./components/app/Header\";\r\nimport Navbar from \"./components/app/Navbar\";\r\nimport Settings from \"./components/app/Settings\";\r\n\r\n/* Customers */\r\nimport NewCustomer from \"./components/customers/NewCustomer\";\r\nimport CustomerGrid from \"./components/customers/CustomerGrid\";\r\nimport EditCustomer from \"./components/customers/EditCustomer\";\r\n\r\n/* Orders */\r\nimport NewOrder from \"./components/orders/NewOrder\";\r\nimport NewOrder2 from \"./components/orders/NewOrder2\";\r\n// import OrdersGrid from \"./components/orders/OrdersGrid\";\r\nimport EditOrder from \"./components/orders/EditOrder\";\r\n\r\n/* Quotes */\r\n// import QuoteGrid from \"./components/quotes/QuoteGrid\";\r\nimport Quoter from \"./components/quotes/Quoter\";\r\nimport EditQuote from \"./components/quotes/EditQuote\";\r\n\r\n/* Products */\r\nimport NewProduct from \"./components/products/NewProduct\";\r\n// import ProductsGrid from \"./components/products/ProductsGrid\";\r\nimport EditProduct from \"./components/products/EditProduct\";\r\n\r\n/* Reports */\r\nimport TotalsPerCustomer from \"./components/reports/TotalsPerCustomer\";\r\nimport TotalsByDate from \"./components/reports/TotalsByDate\";\r\nimport Login from \"./components/app/Login\";\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      session_id: 666,\r\n      username: \"\",\r\n      password: \"\",\r\n      userID: 9,\r\n      userSettings: [],\r\n      styles: null,\r\n      loggedIn: \"true\",\r\n      theme: '',\r\n      darkEnabled: false,\r\n      agent: {\r\n        name: \"Derek Fry\",\r\n        phone: \"(336) 406-3385\",\r\n        email: \"derek.fry2@cellularsales.com\"\r\n      }\r\n    };\r\n    this.hideSpinner = this.hideSpinner.bind(this);\r\n    // this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkUserLoggedIn();\r\n    this.getUserSettings();\r\n    document.addEventListener(\"keypress\", this.resetTimer);\r\n    document.addEventListener(\"mousemove\", this.resetTimer);\r\n/*     setTimeout(() => {\r\n      this.setThemeOK();\r\n    },200) */\r\n  }\r\n\r\n  setThemeOK = () => {\r\n    if(this.state.userSettings[\"theme\"] === \"light\") {\r\n      global.darkEnabled = false;\r\n    } else {\r\n      global.darkEnabled = true;\r\n    }\r\n  }\r\n\r\n  handler = (val) => {\r\n    this.setState({\r\n      loggedIn: val\r\n    })\r\n  }\r\n\r\n  checkUserLoggedIn = () => {\r\n    axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n      global.loggedInVar = response.data.logged_in;\r\n      this.setState({ username: response.data.user },function() {\r\n        this.redirect();\r\n      });\r\n    });\r\n  }\r\n\r\n  redirect = () => {\r\n    let location = \"/customers\";\r\n    if (global.loggedInVar === \"true\" && window.location.pathname === \"/login\") {\r\n      window.location.pathname = location;\r\n    } else if (global.loggedInVar !== \"true\" && window.location.pathname !== \"/login\") {\r\n      window.location.pathname = \"/login\";\r\n    }\r\n    this.forceUpdate();\r\n    this.hideSpinner();\r\n  }\r\n\r\n  themeToggler = () => {\r\n    axios.get(\"/usersetting/9\").then(\r\n      response => (global.theme = response.data.theme)\r\n    ).then(\r\n      setTimeout(() => {\r\n        global.theme === 'light' ? global.themeToggled = 'dark' : global.themeToggled = 'light';\r\n        // UPDATE DB & THEME HERE\r\n        axios.put(\"/usersetting/9\", {\r\n          theme: global.themeToggled\r\n        });\r\n        setTimeout(() => {\r\n          if (this.state.userSettings[\"theme\"] === 'dark') {\r\n            this.setState({\r\n              darkEnabled: true\r\n            }, function() {\r\n              // this.setThemeOK();\r\n              this.getUserSettings();\r\n            })\r\n          } else {\r\n            this.setState({\r\n              darkEnabled: false\r\n            }, function() {\r\n              // this.setThemeOK();\r\n              this.getUserSettings();\r\n            })\r\n          }\r\n        },200)\r\n        // TOGGLE GLOBAL VARIABLE\r\n        global.theme === 'light' ? global.theme = 'dark' : global.theme = 'light';\r\n      }, 200)\r\n    );\r\n          \r\n  }\r\n\r\n  getUserSettings = () => {\r\n    let url = \"/usersetting/9\";\r\n    axios.get(url).then(response => {\r\n      this.setState({\r\n        userSettings: response.data,\r\n        darkEnabled: response.data[\"theme\"] === 'dark' ? true : false\r\n      }/*,function() {\r\n        setTimeout(() => {\r\n          if (this.state.userSettings[\"theme\"] === 'dark') {\r\n            this.setState({\r\n              darkEnabled: true\r\n            })\r\n          } else {\r\n            this.setState({\r\n              darkEnabled: false\r\n            })\r\n          }\r\n        },10)\r\n      }*/,function() {\r\n      })\r\n    });\r\n  }\r\n\r\n  resetTimer = () => {\r\n    clearTimeout(global.time);\r\n    global.time = setTimeout(() => {\r\n      axios.get(\"/params/\" + this.state.session_id).then(response => {\r\n        global.loggedInVar2 = response.data.logged_in;\r\n        if (global.loggedInVar2 === \"true\") {\r\n          this.logOut();\r\n        }\r\n      })\r\n      // 12 hours\r\n    }, 43200000);\r\n  }\r\n\r\n  logOut = () => {\r\n    let url = \"/params/666\";\r\n    axios.put(url, {\r\n      logged_in: \"false\"\r\n    },).then(response => {\r\n      window.location.pathname = \"/login\";\r\n    })\r\n  }\r\n\r\n  authenticate() {\r\n    return new Promise(resolve => setTimeout(resolve, 200)) // 2 seconds\r\n  }\r\n\r\n  hideSpinner = () => {\r\n    this.authenticate().then(() => {\r\n      const ele = document.getElementById(\"spinner\");\r\n      const bg = document.getElementById(\"spinnerBG\");\r\n      if (ele) {\r\n        // fade out\r\n        ele.classList.add('available');\r\n        bg.classList.add('available')\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.userSettings['theme'] === 'dark' ? <DarkTheme /> : null}\r\n        <Router>\r\n          <Header session_id={this.state.session_id} user={this.state.username} />\r\n          <Navbar />\r\n          <Route path=\"/settings\" render={() => <Settings checkUser={this.checkUserLoggedIn} themeToggler={this.themeToggler} getUserSettings={this.getUserSettings} darkEnabled={this.state.darkEnabled} />} />\r\n          {/* Login */}\r\n          <Route exact path=\"/login\" render={() => <Login handler={this.handler} />} />\r\n          {/* Customers */}\r\n          <Route path=\"/newcustomer\" render={() => <NewCustomer checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/customers\" render={() => <CustomerGrid checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/editcustomer\" render={() => <EditCustomer checkUser={this.checkUserLoggedIn} />} />\r\n          {/* Quotes */}\r\n          <Route path=\"/quoter\" render={() => <Quoter agent={this.state.agent} checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/editquote\" render={() => <EditQuote checkUser={this.checkUserLoggedIn} />} />\r\n          {/* Orders */}\r\n          <Route path=\"/neworder\" component={NewOrder} />\r\n          <Route path=\"/neworder2\" component={NewOrder2} />\r\n          {/* <Route path=\"/orders\" component={OrdersGrid} /> */}\r\n          <Route path=\"/editorder\" component={EditOrder} />\r\n          {/* Products */}\r\n          <Route path=\"/newproduct\" render={() => <NewProduct checkUser={this.checkUserLoggedIn} />} />\r\n          {/* <Route path=\"/products\" render={() => <ProductsGrid checkUser={this.checkUserLoggedIn} />} /> */}\r\n          <Route path=\"/editproduct\" component={EditProduct} />\r\n          {/* Reports */}\r\n          <Route path=\"/reports/totalsbycustomer\" render={() => <TotalsPerCustomer checkUser={this.checkUserLoggedIn} />} />\r\n          <Route path=\"/reports/totalsbydate\" render={() => <TotalsByDate checkUser={this.checkUserLoggedIn} />} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}