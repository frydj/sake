{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\components\\\\reports\\\\TotalsByDate.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nclass TotalsByDate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showSpinner = () => {\n      const ele = document.getElementById(\"spinner\");\n      ele.className = \"spinnerContainer\";\n    };\n\n    this.hideSpinner = () => {\n      this.authenticate().then(() => {\n        const ele = document.getElementById(\"spinner\");\n\n        if (ele) {\n          // fade out\n          ele.classList.add('available');\n        }\n\n        setTimeout(() => {\n          this.gridFormat();\n        }, 100);\n      });\n    };\n\n    this.showNoData = () => {\n      if (this.state.reportData.length >= 1) {\n        this.setState({\n          dataAvailable: \"dataIsAvailable\"\n        });\n      } else {\n        this.setState({\n          dataAvailable: \"noData\"\n        });\n      }\n    };\n\n    this.formatNumber = n => {\n      // format number 1000000 to 1,234,567\n      return n.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    };\n\n    this.formatCurrency = (something, blur) => {\n      var input_val = something.innerHTML;\n\n      if (input_val === \"\") {\n        return;\n      }\n\n      if (input_val.indexOf(\".\") >= 0) {\n        var decimal_pos = input_val.indexOf(\".\");\n        var left_side = input_val.substring(0, decimal_pos);\n        var right_side = input_val.substring(decimal_pos);\n        left_side = this.formatNumber(left_side);\n        right_side = this.formatNumber(right_side); //if (blur === \"blur\") {\n\n        right_side += \"00\"; //}\n\n        right_side = right_side.substring(0, 2);\n        input_val = \"$\" + left_side + \".\" + right_side;\n      } else {\n        input_val = this.formatNumber(input_val);\n        input_val = \"$\" + input_val;\n        input_val += \".00\";\n      }\n\n      something.innerHTML = input_val;\n    };\n\n    this.gridFormat = () => {\n      /*         let cells1 = document.getElementsByTagName(\"td\");\r\n              for(var c = 0; c < cells1.length; c++) {\r\n                  if((cells1[c].className === \"currencyField\" && cells1[c].innerHTML === \"\") || \r\n                  (cells1[c].className === \"currencyField\" && parseInt(cells1[c].innerHTML * 100) === 0)) {\r\n                      cells1[c].innerHTML = \" - \";\r\n                  }\r\n                  if(cells1[c].className === \"currencyField\" && cells1[c].innerHTML !== \"\" && cells1[c].innerHTML !== \" - \") {\r\n                      this.formatCurrency(cells1[c]);   \r\n                  }\r\n                  if(cells1[c].className === \"dateField\" && cells1[c].innerHTML !== \"\") {\r\n                      let str = cells1[c].innerHTML;\r\n                      let formatted = str.substring(5,7) + \"/\" + str.substring(8,10) + \"/\" + str.substring(0,4);\r\n                      cells1[c].innerHTML = formatted;\r\n                      cells1[c].className = \"dateField formatted\";\r\n                  }\r\n              } */\n      this.hideSpinner();\n    };\n\n    this.deleteCustomer = someone => {\n      // eslint-disable-next-line\n      let url = \"/customer/\" + `${someone}`;\n      axios.delete(url).then(response => {\n        this.getData();\n      });\n    };\n\n    this.editCustomer = someone => {\n      // eslint-disable-next-line\n      let url = \"/editcustomer/\" + `${someone}`;\n      this.setState({\n        editURL: url\n      });\n    };\n\n    this.addCustomer = () => {\n      let url = \"/customer\";\n      axios.post(url, {\n        firstName: this.firstName.current.value,\n        lastName: this.lastName.current.value,\n        email: this.email.current.value,\n        phone: this.phone.current.value,\n        mtrate: this.mtrate.current.value,\n        mtfrate: this.mtfrate.current.value,\n        mtbrate: this.mtbrate.current.value,\n        paymentType: this.paymentType.current.value,\n        basis: this.basis.current.value,\n        day: this.day.current.value\n      }).then(response => {\n        // refresh the data\n        this.getData(); // empty the input\n\n        this.firstName.current.value = \"\";\n        this.lastName.current.value = \"\";\n        this.email.current.value = \"\";\n        this.phone.current.value = \"\";\n        this.mtrate.current.value = \"\";\n        this.mtfrate.current.value = \"\";\n        this.mtbrate.current.value = \"\";\n        this.paymentType.current.value = \"\";\n        this.basis.current.value = \"\";\n        this.day.current.value = \"\";\n      });\n    };\n\n    this.getData = () => {\n      let url = \"/reports/totalsbydate\";\n      axios.get(url).then(response => this.setState({\n        reportData: response.data\n      }, function () {\n        this.showNoData();\n        this.setDataPerPage();\n        this.getTotals();\n        setTimeout(() => {\n          this.gridFormat();\n        }, 0);\n      }));\n    };\n\n    this.getTotals = () => {\n      let url = \"/reports/totals\";\n      axios.get(url).then(response => this.setState({\n        reportTotals: response.data\n      }, function () {}));\n    };\n\n    this.setDataPerPage = () => {\n      let recordLow = this.state.pageNumber * this.state.resultsPerPage - this.state.resultsPerPage;\n      let recordHigh = this.state.pageNumber * this.state.resultsPerPage - 1;\n      let currentPageData = [];\n      let recordLimit = document.getElementById(\"helperGrid\").childNodes.length;\n      let ceil = Math.ceil(document.getElementById(\"helperGrid\").childNodes.length / this.state.resultsPerPage);\n      let highestPage = document.getElementById(\"highestPage\");\n      highestPage.innerHTML = ceil;\n\n      if (recordHigh > recordLimit - 1) {\n        recordHigh = recordLimit - 1;\n      }\n\n      for (var a = recordLow; a <= recordHigh; a++) {\n        currentPageData.push(this.state.reportData[a]);\n      } //    this.pageMaxMin();\n      //    this.handleApproachPageLimit();\n\n\n      this.setState({\n        currentPage: currentPageData\n      }, this.handleEnds());\n    };\n\n    this.resultsPerPage = e => {\n      let rppc = document.getElementById(\"numberPerPage\").childNodes;\n\n      for (var i = 0; i < rppc.length; i++) {\n        rppc[i].className = \"paginate\";\n      }\n\n      e.target.className = \"paginate paginateActive\";\n      let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\n      pni[0].innerHTML = -1;\n      pni[1].innerHTML = 0;\n      pni[2].innerHTML = 1;\n      pni[3].innerHTML = 2;\n      pni[4].innerHTML = 3;\n      this.setState({\n        resultsPerPage: e.target.innerHTML,\n        pageNumber: 1\n      }, function () {\n        this.setDataPerPage();\n      });\n    };\n\n    this.pageForward = () => {\n      let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\n\n      for (var b = 0; b < pni.length; b++) {\n        pni[b].innerHTML = parseInt(pni[b].innerHTML) + 1;\n      }\n\n      this.setState({\n        pageNumber: this.state.pageNumber + 1\n      }, this.getData());\n    };\n\n    this.pageBackward = () => {\n      let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\n\n      for (var b = 0; b < pni.length; b++) {\n        pni[b].innerHTML = parseInt(pni[b].innerHTML) - 1;\n      }\n\n      this.setState({\n        pageNumber: this.state.pageNumber - 1\n      }, this.getData());\n    };\n\n    this.pageNumber = e => {\n      let sense = parseInt(e.target.innerHTML);\n      let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\n      pni[0].innerHTML = sense - 2;\n      pni[1].innerHTML = sense - 1;\n      pni[2].innerHTML = sense;\n      pni[3].innerHTML = sense + 1;\n      pni[4].innerHTML = sense + 2;\n      this.setState({\n        pageNumber: sense\n      }, this.getData());\n    };\n\n    this.handleEnds = () => {\n      let currentPage = this.state.pageNumber;\n      let backArrow = document.getElementById(\"paginateBackArrow\");\n      let forwardArrow = document.getElementById(\"paginateForwardArrow\");\n      let dots = document.getElementById(\"dotdotdot\");\n      let dotsLow = document.getElementById(\"dotdotdotLow\");\n      let pageMax = document.getElementById(\"highestPage\");\n      let pageMin = document.getElementById(\"lowestPage\");\n      let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\n\n      if (currentPage === 1) {\n        backArrow.className = \"paginateArrow hidden\";\n        pni[1].className = \"paginate hidden\";\n        pni[4].className = \"paginate\";\n      } else {\n        backArrow.className = \"paginateArrow\";\n        pni[1].className = \"paginate\";\n        pni[4].className = \"paginate hidden\";\n      }\n\n      if (currentPage - 1 <= parseInt(pageMin.innerHTML)) {\n        pageMin.className = \"paginate hidden\";\n        dotsLow.className = \"paginatedotdotdot hidden\";\n      } else {\n        pageMin.className = \"paginate\";\n        dotsLow.className = \"paginatedotdotdot\";\n      }\n\n      if (currentPage === parseInt(pageMax.innerHTML)) {\n        forwardArrow.className = \"paginateArrow hidden\";\n        pni[3].className = \"paginate hidden\";\n        pni[0].className = \"paginate\";\n      } else {\n        forwardArrow.className = \"paginateArrow\";\n        pni[3].className = \"paginate\";\n        pni[0].className = \"paginate hidden\";\n      }\n\n      if (currentPage + 1 >= parseInt(pageMax.innerHTML)) {\n        pageMax.className = \"paginate hidden\";\n        dots.className = \"paginatedotdotdot hidden\";\n      } else {\n        pageMax.className = \"paginate\";\n        dots.className = \"paginatedotdotdot\";\n      }\n\n      if (currentPage === parseInt(pageMin.innerHTML) && currentPage === parseInt(pageMax.innerHTML)) {\n        pni[0].className = \"paginate hidden\";\n        pni[4].className = \"paginate hidden\";\n      }\n\n      if (parseInt(pageMax.innerHTML) === 2 && currentPage === 1) {\n        pni[4].className = \"paginate hidden\";\n      }\n\n      if (parseInt(pageMax.innerHTML) === 2 && currentPage === 2) {\n        pni[0].className = \"paginate hidden\";\n      }\n    };\n\n    this.state = {\n      reportData: [],\n      reportTotals: [],\n      currentPage: [],\n      dataAvailable: \"noData\",\n      pageTitle: \"New Customer\",\n      editURL: \"\",\n      resultsPerPage: 50,\n      pageNumber: 1\n    };\n    this.firstName = /*#__PURE__*/React.createRef();\n    this.lastName = /*#__PURE__*/React.createRef();\n    this.email = /*#__PURE__*/React.createRef();\n    this.phone = /*#__PURE__*/React.createRef();\n    this.mtrate = /*#__PURE__*/React.createRef();\n    this.mtfrate = /*#__PURE__*/React.createRef();\n    this.mtbrate = /*#__PURE__*/React.createRef();\n    this.paymentType = /*#__PURE__*/React.createRef();\n    this.basis = /*#__PURE__*/React.createRef();\n    this.day = /*#__PURE__*/React.createRef();\n    this.phoneField = /*#__PURE__*/React.createRef();\n    this.deleteCustomer = this.deleteCustomer.bind(this);\n    this.resultsPerPage = this.resultsPerPage.bind(this);\n    this.setDataPerPage = this.setDataPerPage.bind(this); // this.pageNumber = this.pageNumber.bind(this);\n    // this.pageMaxMin = this.pageMaxMin.bind(this);\n    // this.handleApproachPageLimit = this.handleApproachPageLimit.bind(this);\n    // this.pageForward = this.pageForward.bind(this);\n    // this.pageBackward = this.pageBackward.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.checkUser();\n    this.showSpinner();\n    this.getData();\n    this.forceUpdate();\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      reportData: []\n    }, function () {\n      this.getData();\n    });\n  }\n\n  authenticate() {\n    return new Promise(resolve => setTimeout(resolve, 0)); // 2 seconds\n  }\n\n  // HANDLE WHEN ONLY 1-2 PAGES\n  // RENDER\n  // RENDER\n  // RENDER\n  // RENDER\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }, \"Totals By Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"gridTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"customerGrid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    }, \"Cash ($)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }, \"Credit ($)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, \"Total ($)\")), this.state.reportData.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n      key: p.serviceDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"dateField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, p.serviceDate), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"currencyField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, p.cash), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"currencyField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, p.credit), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"currencyField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, p.total))), this.state.reportTotals.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"totalsRow\",\n      key: \"totalsRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"subheadField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    }, \"Totals:\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"currencyField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }, p.cash), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"currencyField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }\n    }, p.credit), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"currencyField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, p.total))), /*#__PURE__*/React.createElement(\"tr\", {\n      className: this.state.dataAvailable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }, \"No Data Available.\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paginationContainer hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"numberPerPageContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, \"Results Per Page\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"numberPerPage\",\n      className: \"numberPerPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.resultsPerPage,\n      className: \"paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.resultsPerPage,\n      className: \"paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.resultsPerPage,\n      className: \"paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }\n    }, \"25\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.resultsPerPage,\n      className: \"paginate paginateActive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, \"50\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageNumberContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    }, \"Page Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"pageNumber\",\n      className: \"pageNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageBackward,\n      id: \"paginateBackArrow\",\n      className: \"paginateArrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageNumber,\n      id: \"lowestPage\",\n      className: \"paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dotdotdotLow\",\n      className: \"paginatedotdotdot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 21\n      }\n    }, \"...\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageNumberIncrement\",\n      id: \"pageNumberIncrement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageNumber,\n      className: \"paginate hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }\n    }, \"-1\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageNumber,\n      className: \"paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageNumber,\n      className: \"paginate paginateActive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageNumber,\n      className: \"paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageNumber,\n      className: \"paginate hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, \"3\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dotdotdot\",\n      className: \"paginatedotdotdot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }\n    }, \"...\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageNumber,\n      id: \"highestPage\",\n      className: \"paginate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pageForward,\n      id: \"paginateForwardArrow\",\n      className: \"paginateArrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 21\n      }\n    }, \"\\u2192\")))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"helperGrid\",\n      className: \"helperGrid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, this.state.reportData.map(p => /*#__PURE__*/React.createElement(\"p\", {\n      key: p.serviceDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 25\n      }\n    }, p.customerid))));\n  }\n\n}\n\nexport default _c = withRouter(TotalsByDate);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/components/reports/TotalsByDate.js"],"names":["React","axios","withRouter","TotalsByDate","Component","constructor","props","showSpinner","ele","document","getElementById","className","hideSpinner","authenticate","then","classList","add","setTimeout","gridFormat","showNoData","state","reportData","length","setState","dataAvailable","formatNumber","n","replace","formatCurrency","something","blur","input_val","innerHTML","indexOf","decimal_pos","left_side","substring","right_side","deleteCustomer","someone","url","delete","response","getData","editCustomer","editURL","addCustomer","post","firstName","current","value","lastName","email","phone","mtrate","mtfrate","mtbrate","paymentType","basis","day","get","data","setDataPerPage","getTotals","reportTotals","recordLow","pageNumber","resultsPerPage","recordHigh","currentPageData","recordLimit","childNodes","ceil","Math","highestPage","a","push","currentPage","handleEnds","e","rppc","i","target","pni","pageForward","b","parseInt","pageBackward","sense","backArrow","forwardArrow","dots","dotsLow","pageMax","pageMin","pageTitle","createRef","phoneField","bind","componentDidMount","checkUser","forceUpdate","componentWillUnmount","Promise","resolve","render","map","p","serviceDate","cash","credit","total","customerid"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass TotalsByDate extends React.Component {  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            reportData: [],\r\n            reportTotals: [],\r\n            currentPage: [],\r\n            dataAvailable: \"noData\",\r\n            pageTitle: \"New Customer\",\r\n            editURL: \"\",\r\n            resultsPerPage: 50,\r\n            pageNumber: 1\r\n        };\r\n        this.firstName = React.createRef();\r\n        this.lastName = React.createRef();\r\n        this.email = React.createRef();\r\n        this.phone = React.createRef();\r\n        this.mtrate = React.createRef();\r\n        this.mtfrate = React.createRef();\r\n        this.mtbrate = React.createRef();\r\n        this.paymentType = React.createRef();\r\n        this.basis = React.createRef();\r\n        this.day = React.createRef();\r\n        this.phoneField = React.createRef();\r\n        \r\n        this.deleteCustomer = this.deleteCustomer.bind(this);\r\n        this.resultsPerPage = this.resultsPerPage.bind(this);\r\n        this.setDataPerPage = this.setDataPerPage.bind(this);\r\n        // this.pageNumber = this.pageNumber.bind(this);\r\n        // this.pageMaxMin = this.pageMaxMin.bind(this);\r\n        // this.handleApproachPageLimit = this.handleApproachPageLimit.bind(this);\r\n        // this.pageForward = this.pageForward.bind(this);\r\n        // this.pageBackward = this.pageBackward.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.checkUser();\r\n        this.showSpinner();\r\n        this.getData();\r\n        this.forceUpdate();\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.setState({\r\n            reportData: []\r\n        },function(){\r\n            this.getData();\r\n        });\r\n    }\r\n    \r\n    authenticate(){\r\n        return new Promise(resolve => setTimeout(resolve, 0)) // 2 seconds\r\n    }\r\n    \r\n    showSpinner = () => {\r\n        const ele = document.getElementById(\"spinner\");\r\n        ele.className = \"spinnerContainer\";\r\n    }\r\n    \r\n    hideSpinner = () => {\r\n        this.authenticate().then(() => {\r\n            const ele = document.getElementById(\"spinner\");\r\n            if(ele){\r\n                // fade out\r\n                ele.classList.add('available')\r\n            }\r\n            setTimeout(() => {\r\n                this.gridFormat();\r\n            }, 100);\r\n        })\r\n    }\r\n    \r\n    showNoData = () => {\r\n        if(this.state.reportData.length >= 1) {\r\n            this.setState({dataAvailable: \"dataIsAvailable\"})\r\n        } else {\r\n            this.setState({dataAvailable: \"noData\"})\r\n        }\r\n    }\r\n    \r\n    formatNumber = (n) => {\r\n        // format number 1000000 to 1,234,567\r\n        return n.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    }\r\n    \r\n    \r\n    formatCurrency = (something, blur) => {\r\n        var input_val = something.innerHTML;\r\n        if (input_val === \"\") { return; }\r\n        if (input_val.indexOf(\".\") >= 0) {\r\n            var decimal_pos = input_val.indexOf(\".\");\r\n            var left_side = input_val.substring(0, decimal_pos);\r\n            var right_side = input_val.substring(decimal_pos);\r\n            left_side = this.formatNumber(left_side);\r\n            right_side = this.formatNumber(right_side);\r\n            //if (blur === \"blur\") {\r\n            right_side += \"00\";\r\n            //}\r\n            right_side = right_side.substring(0, 2);\r\n            input_val = \"$\" + left_side + \".\" + right_side;\r\n        } else {\r\n            input_val = this.formatNumber(input_val);\r\n            input_val = \"$\" + input_val;\r\n            input_val += \".00\";\r\n        }\r\n        something.innerHTML = input_val;\r\n    }\r\n    \r\n    \r\n    gridFormat = () => {\r\n/*         let cells1 = document.getElementsByTagName(\"td\");\r\n        for(var c = 0; c < cells1.length; c++) {\r\n            if((cells1[c].className === \"currencyField\" && cells1[c].innerHTML === \"\") || \r\n            (cells1[c].className === \"currencyField\" && parseInt(cells1[c].innerHTML * 100) === 0)) {\r\n                cells1[c].innerHTML = \" - \";\r\n            }\r\n            if(cells1[c].className === \"currencyField\" && cells1[c].innerHTML !== \"\" && cells1[c].innerHTML !== \" - \") {\r\n                this.formatCurrency(cells1[c]);   \r\n            }\r\n            if(cells1[c].className === \"dateField\" && cells1[c].innerHTML !== \"\") {\r\n                let str = cells1[c].innerHTML;\r\n                let formatted = str.substring(5,7) + \"/\" + str.substring(8,10) + \"/\" + str.substring(0,4);\r\n                cells1[c].innerHTML = formatted;\r\n                cells1[c].className = \"dateField formatted\";\r\n            }\r\n        } */\r\n        this.hideSpinner();\r\n    }\r\n    \r\n    deleteCustomer = (someone) => {\r\n        // eslint-disable-next-line\r\n        let url = \"/customer/\" + `${someone}`\r\n        axios.delete(url)\r\n        .then(response => {\r\n            this.getData();\r\n        })\r\n    }\r\n    \r\n    editCustomer = (someone) => {\r\n        // eslint-disable-next-line\r\n        let url = \"/editcustomer/\" + `${someone}`;\r\n        this.setState({\r\n            editURL: url\r\n        })\r\n    }\r\n    \r\n    addCustomer = () => {\r\n        let url = \"/customer\";\r\n        axios.post(url, { \r\n            firstName: this.firstName.current.value,\r\n            lastName: this.lastName.current.value,\r\n            email: this.email.current.value,\r\n            phone: this.phone.current.value,\r\n            mtrate: this.mtrate.current.value,\r\n            mtfrate: this.mtfrate.current.value,\r\n            mtbrate: this.mtbrate.current.value,\r\n            paymentType: this.paymentType.current.value,\r\n            basis: this.basis.current.value,\r\n            day: this.day.current.value,\r\n        }).then(response => {\r\n            // refresh the data\r\n            this.getData();\r\n            // empty the input\r\n            this.firstName.current.value = \"\";\r\n            this.lastName.current.value = \"\";\r\n            this.email.current.value = \"\";\r\n            this.phone.current.value = \"\";\r\n            this.mtrate.current.value = \"\";\r\n            this.mtfrate.current.value = \"\";\r\n            this.mtbrate.current.value = \"\";\r\n            this.paymentType.current.value = \"\";\r\n            this.basis.current.value = \"\";\r\n            this.day.current.value = \"\";\r\n        });\r\n    };\r\n    \r\n    getData = () => {\r\n        let url = \"/reports/totalsbydate\";\r\n        axios.get(url).then(response => this.setState({ reportData: response.data }, function() {\r\n            this.showNoData();\r\n            this.setDataPerPage();\r\n            this.getTotals();\r\n            setTimeout(() => {\r\n                this.gridFormat();\r\n            }, 0);\r\n        }));\r\n    };\r\n    \r\n    getTotals = () => {\r\n        let url = \"/reports/totals\";\r\n        axios.get(url).then(response => this.setState({ reportTotals: response.data }, function() {\r\n        }));\r\n    };\r\n    \r\n    setDataPerPage = () => {\r\n        let recordLow = this.state.pageNumber * this.state.resultsPerPage - this.state.resultsPerPage;\r\n        let recordHigh = this.state.pageNumber * this.state.resultsPerPage - 1;\r\n        let currentPageData = [];\r\n        let recordLimit = document.getElementById(\"helperGrid\").childNodes.length;\r\n        let ceil = Math.ceil(document.getElementById(\"helperGrid\").childNodes.length / this.state.resultsPerPage);\r\n        let highestPage = document.getElementById(\"highestPage\");\r\n        \r\n        highestPage.innerHTML = ceil;\r\n        if(recordHigh > recordLimit - 1) {\r\n            recordHigh = recordLimit - 1;\r\n        }\r\n        for(var a = recordLow; a <= recordHigh; a++) {\r\n            currentPageData.push(this.state.reportData[a]);\r\n        }\r\n        //    this.pageMaxMin();\r\n        //    this.handleApproachPageLimit();\r\n        this.setState({\r\n            currentPage: currentPageData\r\n        },  this.handleEnds())\r\n    }\r\n    \r\n    resultsPerPage = (e) => {\r\n        let rppc = document.getElementById(\"numberPerPage\").childNodes;\r\n        for(var i = 0; i < rppc.length; i++) {\r\n            rppc[i].className=\"paginate\";\r\n        }\r\n        e.target.className = \"paginate paginateActive\";\r\n        \r\n        let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\r\n        pni[0].innerHTML = -1;\r\n        pni[1].innerHTML = 0;\r\n        pni[2].innerHTML = 1;\r\n        pni[3].innerHTML = 2;\r\n        pni[4].innerHTML = 3;\r\n        \r\n        this.setState({\r\n            resultsPerPage: e.target.innerHTML,\r\n            pageNumber: 1\r\n        },function(){\r\n            this.setDataPerPage();\r\n        })\r\n    }\r\n    \r\n    // PAGINATION\r\n    // PAGINATION\r\n    // PAGINATION\r\n    // PAGINATION\r\n    \r\n    // FORWARD ARROW\r\n    pageForward = () => {\r\n        let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\r\n        \r\n        for(var b = 0; b < pni.length; b++){\r\n            pni[b].innerHTML = parseInt(pni[b].innerHTML) + 1;\r\n        }\r\n        \r\n        this.setState({\r\n            pageNumber: this.state.pageNumber + 1\r\n        },this.getData())\r\n    }\r\n    \r\n    // BACK ARROW\r\n    pageBackward = () => {\r\n        let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\r\n        \r\n        for(var b = 0; b < pni.length; b++){\r\n            pni[b].innerHTML = parseInt(pni[b].innerHTML) - 1;\r\n        }\r\n        \r\n        this.setState({\r\n            pageNumber: this.state.pageNumber - 1\r\n        },this.getData())\r\n    }\r\n    \r\n    // CLICK NUMBER\r\n    pageNumber = (e) => {\r\n        let sense = parseInt(e.target.innerHTML);\r\n        let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\r\n        pni[0].innerHTML = sense - 2;\r\n        pni[1].innerHTML = sense - 1;\r\n        pni[2].innerHTML = sense;\r\n        pni[3].innerHTML = sense + 1;\r\n        pni[4].innerHTML = sense + 2;\r\n        \r\n        this.setState({\r\n            pageNumber: sense\r\n        },this.getData())\r\n        \r\n    }\r\n    \r\n    // HANDLE HIDE/SHOW OF ENDCAPS\r\n    handleEnds = () => {\r\n        let currentPage = this.state.pageNumber;\r\n        let backArrow = document.getElementById(\"paginateBackArrow\");\r\n        let forwardArrow = document.getElementById(\"paginateForwardArrow\");\r\n        let dots = document.getElementById(\"dotdotdot\");\r\n        let dotsLow = document.getElementById(\"dotdotdotLow\");\r\n        let pageMax = document.getElementById(\"highestPage\");\r\n        let pageMin = document.getElementById(\"lowestPage\");\r\n        let pni = document.getElementById(\"pageNumberIncrement\").childNodes;\r\n        \r\n        if(currentPage === 1){\r\n            backArrow.className = \"paginateArrow hidden\";\r\n            pni[1].className = \"paginate hidden\";\r\n            pni[4].className = \"paginate\";\r\n        } else {\r\n            backArrow.className = \"paginateArrow\";\r\n            pni[1].className = \"paginate\";\r\n            pni[4].className = \"paginate hidden\";\r\n        }\r\n        \r\n        if(currentPage - 1 <= parseInt(pageMin.innerHTML)) {\r\n            pageMin.className = \"paginate hidden\";\r\n            dotsLow.className = \"paginatedotdotdot hidden\";\r\n        } else {\r\n            pageMin.className = \"paginate\";\r\n            dotsLow.className = \"paginatedotdotdot\";\r\n        }\r\n        \r\n        if(currentPage === parseInt(pageMax.innerHTML)) {\r\n            forwardArrow.className = \"paginateArrow hidden\";\r\n            pni[3].className = \"paginate hidden\";\r\n            pni[0].className = \"paginate\";\r\n        } else {\r\n            forwardArrow.className = \"paginateArrow\";\r\n            pni[3].className = \"paginate\";\r\n            pni[0].className = \"paginate hidden\";\r\n        }\r\n        \r\n        if(currentPage + 1 >= parseInt(pageMax.innerHTML)) {\r\n            pageMax.className = \"paginate hidden\";\r\n            dots.className = \"paginatedotdotdot hidden\";\r\n        } else {\r\n            pageMax.className = \"paginate\";\r\n            dots.className = \"paginatedotdotdot\";\r\n        }\r\n        \r\n        if(currentPage === parseInt(pageMin.innerHTML) && currentPage === parseInt(pageMax.innerHTML)) {\r\n            pni[0].className = \"paginate hidden\";\r\n            pni[4].className = \"paginate hidden\";\r\n        }\r\n        \r\n        if(parseInt(pageMax.innerHTML) === 2 && currentPage === 1) {\r\n            pni[4].className = \"paginate hidden\";\r\n        }\r\n        \r\n        if(parseInt(pageMax.innerHTML) === 2 && currentPage === 2) {\r\n            pni[0].className = \"paginate hidden\";\r\n        }\r\n        \r\n    }\r\n    \r\n    // HANDLE WHEN ONLY 1-2 PAGES\r\n    \r\n    \r\n    // RENDER\r\n    // RENDER\r\n    // RENDER\r\n    // RENDER\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"customer\"> \r\n            <h3>Totals By Date</h3>\r\n            <div className=\"grid\">\r\n            <table className=\"gridTable\">\r\n            <tbody id=\"customerGrid\">\r\n            <tr>\r\n            <th>Date</th>\r\n            <th>Cash ($)</th>\r\n            <th>Credit ($)</th>\r\n            <th>Total ($)</th>\r\n            </tr>\r\n            {this.state.reportData.map(p => (\r\n                <tr key={p.serviceDate}>\r\n                <td className=\"dateField\">{p.serviceDate}</td>\r\n                <td className=\"currencyField\">{p.cash}</td>\r\n                <td className=\"currencyField\">{p.credit}</td>\r\n                <td className=\"currencyField\">{p.total}</td>\r\n                </tr>\r\n                ))}\r\n                \r\n                {this.state.reportTotals.map(p => (\r\n                    \r\n                    <tr className=\"totalsRow\" key=\"totalsRow\">\r\n                    \r\n                    <td className=\"subheadField\">Totals:</td>\r\n                    <td className=\"currencyField\">{p.cash}</td>\r\n                    <td className=\"currencyField\">{p.credit}</td>\r\n                    <td className=\"currencyField\">{p.total}</td>\r\n                    \r\n                    </tr>\r\n                    \r\n                    ))}\r\n                    \r\n                    <tr className={this.state.dataAvailable}>\r\n                    <td colSpan=\"11\">No Data Available.</td>\r\n                    </tr>\r\n                    </tbody>\r\n                    </table>\r\n                    </div>\r\n                    \r\n                    <div className=\"paginationContainer hidden\">\r\n                    \r\n                    <div className=\"numberPerPageContainer\">\r\n                    <label>Results Per Page</label>\r\n                    \r\n                    <div id=\"numberPerPage\" className=\"numberPerPage\">\r\n                    \r\n                    <div onClick={this.resultsPerPage} className=\"paginate\">3</div>\r\n                    <div onClick={this.resultsPerPage} className=\"paginate\">10</div>\r\n                    <div onClick={this.resultsPerPage} className=\"paginate\">25</div>\r\n                    <div onClick={this.resultsPerPage} className=\"paginate paginateActive\">50</div>\r\n                    \r\n                    </div>\r\n                    \r\n                    </div>\r\n                    \r\n                    <div className=\"pageNumberContainer\">\r\n                    <label>Page Number</label>\r\n                    \r\n                    <div id=\"pageNumber\" className=\"pageNumber\">\r\n                    \r\n                    <div onClick={this.pageBackward} id=\"paginateBackArrow\" className=\"paginateArrow\">&larr;</div>\r\n                    <div onClick={this.pageNumber} id=\"lowestPage\" className=\"paginate\">1</div>\r\n                    <div id=\"dotdotdotLow\" className=\"paginatedotdotdot\">...</div>\r\n                    \r\n                    <div className=\"pageNumberIncrement\" id=\"pageNumberIncrement\">\r\n                    <div onClick={this.pageNumber} className=\"paginate hidden\">-1</div>\r\n                    <div onClick={this.pageNumber} className=\"paginate\">0</div>\r\n                    <div onClick={this.pageNumber} className=\"paginate paginateActive\">1</div>\r\n                    <div onClick={this.pageNumber} className=\"paginate\">2</div>\r\n                    <div onClick={this.pageNumber} className=\"paginate hidden\">3</div>\r\n                    </div>\r\n                    \r\n                    <div id=\"dotdotdot\" className=\"paginatedotdotdot\">...</div>\r\n                    <div onClick={this.pageNumber} id=\"highestPage\" className=\"paginate\">4</div>\r\n                    <div onClick={this.pageForward} id=\"paginateForwardArrow\" className=\"paginateArrow\">&rarr;</div>\r\n                    \r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    <div id=\"helperGrid\" className=\"helperGrid\">\r\n                    {this.state.reportData.map(p => (\r\n                        <p key={p.serviceDate}>{p.customerid}</p>\r\n                        ))}\r\n                        </div>\r\n                        \r\n                        </div>\r\n                        );\r\n                    }\r\n                }\r\n                \r\n                export default withRouter(TotalsByDate);\r\n                "]},"metadata":{},"sourceType":"module"}