{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek\\\\Documents\\\\GitHub\\\\sake\\\\client-react\\\\src\\\\ThemeChanger.js\";\nimport React, { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles, Scrollbars } from './themes.js';\nimport axios from 'axios';\n/* bodyBg: \"snow\",\r\nheaders: nearBlack,\r\ntopNavBg: darkGray,\r\ntopNavBgHover: medGray,\r\ntopNavTxt: nearWhite,\r\nlogoBannerBg: \"linear-gradient(to right, #337BD2, #A6C9F3)\",\r\nuserTxt: \"snow\",\r\nactiveCustTxt: \"snow\",\r\ntableHeadBg: lightGray,\r\ntableHeadTxt: nightBase0,\r\ntableDataBg: \"snow\",\r\ntableDataBgOdd: nearWhite,\r\ntableDataTxt: nightBase0, */\n\nconst StyledApp = styled.div``;\n_c = StyledApp;\n\nfunction ThemeChanger(props) {\n  var _s = $RefreshSig$();\n\n  const themeToggler = () => {\n    _s();\n\n    let url = \"/usersetting/9\";\n    axios.get(url).then(response => //props.setThemeProp(response.theme)\n    global.Theme = response.data.theme);\n    const [theme, setTheme] = useState(global.Theme);\n    global.Theme === 'light' ? setTheme('dark') : setTheme('light'); // props.setThemeProp(theme);\n    // console.log(props.theme);\n    // props.theme === 'light' ? props.theme = 'dark' : props.theme = 'light';\n\n    global.Theme === 'light' ? global.Theme = 'dark' : global.Theme = 'light';\n    axios.put(url, {\n      theme: global.Theme\n    });\n    console.log(global.Theme);\n  };\n\n  _s(themeToggler, \"LRthaK2T96rdqgS3PxhT6HubWKE=\");\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), theme === 'dark' ? /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 34\n    }\n  }) : null, /*#__PURE__*/React.createElement(StyledApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"universalDark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"darkMode\",\n    type: \"checkbox\",\n    onClick: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }))))));\n}\n\n_c2 = ThemeChanger;\nexport default ThemeChanger;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledApp\");\n$RefreshReg$(_c2, \"ThemeChanger\");","map":{"version":3,"sources":["C:/Users/Derek/Documents/GitHub/sake/client-react/src/ThemeChanger.js"],"names":["React","useState","styled","ThemeProvider","lightTheme","darkTheme","GlobalStyles","Scrollbars","axios","StyledApp","div","ThemeChanger","props","themeToggler","url","get","then","response","global","Theme","data","theme","setTheme","put","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,EAA8CC,UAA9C,QAAgE,aAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI,EAA7B;KAAMD,S;;AACN,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAIC,GAAG,GAAG,gBAAV;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,QAAQ,IACxB;AACAC,IAAAA,MAAM,CAACC,KAAP,GAAeF,QAAQ,CAACG,IAAT,CAAcC,KAFjC;AAIA,UAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACiB,MAAM,CAACC,KAAR,CAAlC;AACAD,IAAAA,MAAM,CAACC,KAAP,KAAiB,OAAjB,GAA2BG,QAAQ,CAAC,MAAD,CAAnC,GAA8CA,QAAQ,CAAC,OAAD,CAAtD,CAPuB,CAQvB;AACA;AACA;;AACAJ,IAAAA,MAAM,CAACC,KAAP,KAAiB,OAAjB,GAA2BD,MAAM,CAACC,KAAP,GAAe,MAA1C,GAAmDD,MAAM,CAACC,KAAP,GAAe,OAAlE;AACAX,IAAAA,KAAK,CAACe,GAAN,CAAUT,GAAV,EAAe;AACXO,MAAAA,KAAK,EAAEH,MAAM,CAACC;AADH,KAAf;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACC,KAAnB;AACH,GAhBD;;AADyB,KACnBN,YADmB;;AAkBzB,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEQ,KAAK,KAAK,OAAV,GAAoBjB,UAApB,GAAiCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMgB,KAAK,KAAK,MAAV,gBAAmB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAoC,IAF1C,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,OAAO,EAAER,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ,CAHJ,CADJ;AAgBH;;MAlCQF,Y;AAoCT,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme, GlobalStyles, Scrollbars } from './themes.js';\r\nimport axios from 'axios';\r\n/* bodyBg: \"snow\",\r\nheaders: nearBlack,\r\ntopNavBg: darkGray,\r\ntopNavBgHover: medGray,\r\ntopNavTxt: nearWhite,\r\nlogoBannerBg: \"linear-gradient(to right, #337BD2, #A6C9F3)\",\r\nuserTxt: \"snow\",\r\nactiveCustTxt: \"snow\",\r\ntableHeadBg: lightGray,\r\ntableHeadTxt: nightBase0,\r\ntableDataBg: \"snow\",\r\ntableDataBgOdd: nearWhite,\r\ntableDataTxt: nightBase0, */\r\n\r\n\r\nconst StyledApp = styled.div``\r\nfunction ThemeChanger(props) {\r\n    const themeToggler = () => {\r\n        let url = \"/usersetting/9\";\r\n        axios.get(url).then(response => \r\n            //props.setThemeProp(response.theme)\r\n            global.Theme = response.data.theme\r\n        );\r\n        const [theme, setTheme] = useState(global.Theme);\r\n        global.Theme === 'light' ? setTheme('dark') : setTheme('light');\r\n        // props.setThemeProp(theme);\r\n        // console.log(props.theme);\r\n        // props.theme === 'light' ? props.theme = 'dark' : props.theme = 'light';\r\n        global.Theme === 'light' ? global.Theme = 'dark' : global.Theme = 'light';\r\n        axios.put(url, {\r\n            theme: global.Theme\r\n        });\r\n        console.log(global.Theme)\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n            <GlobalStyles />\r\n            { theme === 'dark' ? <Scrollbars /> : null }\r\n            <StyledApp>\r\n                <div className=\"universalDark\">\r\n                    <div className=\"value\">\r\n                        <label className=\"switch\">\r\n                            <input id=\"darkMode\" type=\"checkbox\" onClick={themeToggler} />\r\n                            <span className=\"slider round\"></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </StyledApp>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger;"]},"metadata":{},"sourceType":"module"}